<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RMLib</name>
    </assembly>
    <members>
        <member name="T:RMLib.ApplicationArguments">
            <summary>
            Аргументы приложения
            </summary>
        </member>
        <member name="M:RMLib.ApplicationArguments.ContainsArgument(System.String)">
            <summary>
            Возвращает true, если аргументы приложения содержат указанный аргумент, иначе false
            </summary>
        </member>
        <member name="M:RMLib.ApplicationArguments.ToString">
            <summary>
            Возвращает строку аргументов, разделённых пробелом
            </summary>
        </member>
        <member name="P:RMLib.ApplicationArguments.Arguments">
            <summary>
            Возвращает список аргументов
            </summary>
        </member>
        <member name="P:RMLib.ApplicationArguments.IsNoSplash">
            <summary>
            Возвращает true, если указан признак отмены заставки, иначе false
            </summary>
        </member>
        <member name="P:RMLib.ApplicationArguments.Item(System.String)">
            <summary>
            Возвращает агрумент по указанному имени или пустую строку, если агрумент не найден
            </summary>
        </member>
        <member name="T:RMLib.ApplicationServices">
            <summary>
            Методы для работы с приложением
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.GetAssemblyNames(System.String)">
            <summary>
            Возвращает имена сборок, находящихся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.GetAssemblyNames(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Возвращает имена сборок, находящихся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.GetUnmanagedAssemblyName(System.String)">
            <summary>
            Возвращает имя для неуправляемой сборки
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.LoadAssemblies(System.String)">
            <summary>
            Загружает сборки, находящиеся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.LoadAssemblies(System.String,System.Action{System.String,System.Exception})">
            <summary>
            Загружает сборки, находящиеся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.LoadAssemblies(System.String,System.Action{System.String,System.Exception},System.String,System.IO.SearchOption)">
            <summary>
            Загружает сборки, находящиеся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.FindAssemblies(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Находит сборки по строке, содержащейся в имени, среди загруженных в текущий домен приложения
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.FindAssemblies(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Находит сборки по имени среди загруженных в текущий домен приложения
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.GetApplicationRootPath">
            <summary>
            Возвращает путь к корневому каталогу приложения
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.GetApplicationName">
            <summary>
            Возвращает имя приложения
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.GetApplicationDescription">
            <summary>
            Возвращает описание приложения
            </summary>
        </member>
        <member name="M:RMLib.ApplicationServices.GetExtensionString(RMLib.IExtensionObject,System.Type,System.Reflection.Assembly)">
            <summary>
            Возвращает имя расширения, типа или сборки для указанного объекта расширения
            </summary>
        </member>
        <member name="T:RMLib.ApplicationState">
            <summary>
            Состояние приложения
            </summary>
        </member>
        <member name="T:RMLib.ExtensibleApplicationState">
            <summary>
            Состояние расширяемого приложения
            </summary>
        </member>
        <member name="T:RMLib.AssemblyConfiguration">
            <summary>
            Конфигурация сборки
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfiguration.Load">
            <summary>
            Загружает конфигурацию
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfiguration.Save">
            <summary>
            Сохраняет конфигурацию
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfiguration.Save(RMLib.ConfigurationOptions)">
            <summary>
            Сохраняет конфигурацию
            </summary>
        </member>
        <member name="P:RMLib.AssemblyConfiguration.Assembly">
            <summary>
            Возвращает сборку
            </summary>
        </member>
        <member name="P:RMLib.AssemblyConfiguration.Item(System.String)">
            <summary>
            Возвращает/устанавливает значение указанной настройки
            </summary>
        </member>
        <member name="T:RMLib.ConfigurationOptions">
            <summary>
            Флаги для загрузки конфигурации
            </summary>
        </member>
        <member name="T:RMLib.AssemblyConfigurationHelper">
            <summary>
            Методы для работы с конфигурацией сборки
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.RegisterCustomSetting(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Регистрирует пользовательскую настройку для указанной сборки
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.LoadConfiguration(System.Reflection.Assembly)">
            <summary>
            Загрузка настроек из конфигурации сборки
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.LoadConfiguration(System.Reflection.Assembly,RMLib.ConfigurationOptions)">
            <summary>
            Загрузка настроек из конфигурации сборки
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.SaveConfiguration(System.Reflection.Assembly,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Сохранение настроек в конфигурацию сборки
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.SaveConfiguration(System.Reflection.Assembly,System.Collections.Specialized.NameValueCollection,RMLib.ConfigurationOptions)">
            <summary>
            Сохранение настроек в конфигурацию сборки
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.GetUserConfigurationFileName">
            <summary>
            Возвращает путь к файлу пользовательских настроек
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.GetDefaultConnectionString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Возвращает строку соединения из указанной конфигурации вызывающей сборки
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.GetDefaultConnectionString(System.Collections.Specialized.NameValueCollection,System.Reflection.Assembly)">
            <summary>
            Возвращает строку соединения из указанной конфигурации указанной сборки
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.GetConnectionStringFullName(System.String)">
            <summary>
            Возвращает полное имя параметра строки соединения
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.GetConnectionStringFullName(System.String,System.Reflection.Assembly)">
            <summary>
            Возвращает полное имя параметра строки соединения
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.GetConnectionStringShortName(System.String)">
            <summary>
            Возвращает краткое имя параметра строки соединения
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.GetConnectionStringShortName(System.String,System.Reflection.Assembly)">
            <summary>
            Возвращает краткое имя параметра строки соединения
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.GetSettingsType(System.Reflection.Assembly)">
            <summary>
            Возвращает тип класса настроек сборки
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.OpenSections(System.Reflection.Assembly,System.Type,System.Configuration.ClientSettingsSection@,System.Configuration.ClientSettingsSection@,System.Configuration.ClientSettingsSection@)">
            <summary>
            Открытие конфигурации сборки и получение секции приложения и пользовательской секции
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.GetElement(System.Configuration.SettingElement)">
            <summary>
            Возвращает значение элемента
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.SetElement(System.Configuration.SettingElement,System.String)">
            <summary>
            Устанавливает значение элемента
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.ThrowIfNotFound(System.Type,System.Reflection.Assembly)">
            <summary>
            Выбрасывает исключение, если класс настроек не найден
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.SerializeValue(System.Type,System.Object)">
            <summary>
            Сериализует значение в строку для записи в файл конфигурации
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.SettingsLoadHandler(System.Object,System.Configuration.SettingsLoadedEventArgs)">
            <summary>
            Обработчик загрузки настроек (для неисполняемых сборок)
            </summary>
        </member>
        <member name="M:RMLib.AssemblyConfigurationHelper.SettingsSaveHandler(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Обработчик сохранения настроек
            </summary>
        </member>
        <member name="T:RMLib.ApplicationObject`2">
            <summary>
            Абстрактный базовый класс расширяемого приложения
            </summary>
        </member>
        <member name="T:RMLib.ExtensibleObject`2">
            <summary>
            Абстрактный базовый класс расширяемого объекта
            </summary>
        </member>
        <member name="T:RMLib.Disposable">
            <summary>
            Абстрактный базовый класс для объектов, использующих освобождаемые ресурсы
            </summary>
        </member>
        <member name="M:RMLib.Disposable.Dispose">
            <summary>
            Освобождает ресурсы объекта
            </summary>
        </member>
        <member name="M:RMLib.Disposable.OnDeserialization(System.Object)">
            <summary>
            Инициализирует объект после десериализации
            </summary>
        </member>
        <member name="M:RMLib.Disposable.Dispose(System.Boolean)">
            <summary>
            Освобождает ресурсы объекта
            </summary>
        </member>
        <member name="M:RMLib.Disposable.DisposeManagedResources">
            <summary>
            Освобождает управляемые ресурсы
            </summary>
        </member>
        <member name="M:RMLib.Disposable.DisposeUnmanagedResources">
            <summary>
            Освобождает неуправляемые ресурсы
            </summary>
        </member>
        <member name="M:RMLib.Disposable.OnDisposeException(System.Exception)">
            <summary>
            Обрабатывает исключение, возникающее при освобождении ресурсов.
            После обработки исключение перебрасывается
            </summary>
        </member>
        <member name="M:RMLib.Disposable.ThrowIfDisposed">
            <summary>
            Выбрасывает исключение, если ресурсы уже освобождены
            </summary>
        </member>
        <member name="P:RMLib.Disposable.IsDisposed">
            <summary>
            Возвращает true, если ресурсы освобождены, иначе false
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.LoadExtensionsFromFile(System.String)">
            <summary>
            Загружает и подключает расширения из сборки, находящейся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.LoadExtensionsFromFile(System.String,System.Predicate{System.Type})">
            <summary>
            Загружает и подключает расширения из сборки, находящейся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.LoadExtensionsFromFile(System.String,System.Predicate{System.Type},System.Action{`1},System.Action{`1,System.Type,System.Reflection.Assembly,System.Exception})">
            <summary>
            Загружает и подключает расширения из сборки, находящейся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.LoadExtensions(System.String)">
            <summary>
            Загружает и подключает расширения из сборок, находящихся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.LoadExtensions(System.String,System.Predicate{System.Type})">
            <summary>
            Загружает и подключает расширения из сборок, находящихся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.LoadExtensions(System.String,System.Predicate{System.Type},System.Action{`1},System.Action{`1,System.Type,System.Reflection.Assembly,System.Exception})">
            <summary>
            Загружает и подключает расширения из сборок, находящихся по указанному пути
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.LoadExtensionsCore(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Predicate{System.Type},System.Action{`1},System.Action{`1,System.Type,System.Reflection.Assembly,System.Exception})">
            <summary>
            Загружает и подключает расширения из указанных сборок
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.ThrowIfAlreadyLoaded(System.Type)">
            <summary>
            Выбрасывает исключение, если расширение с указанным типом уже загружено
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.AddExtension(System.Type)">
            <summary>
            Подключает расширение, определяемое указанным типом, из загруженной ранее сборки
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.AddExtension(System.Type,System.Action{`1},System.Action{`1,System.Type,System.Reflection.Assembly,System.Exception})">
            <summary>
            Подключает расширение, определяемое указанным типом, из загруженной ранее сборки
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.RemoveExtensions(System.String)">
            <summary>
            Отключает все расширения с указанным именем
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.RemoveExtensions(System.String,System.Action{`1},System.Action{`1,System.Exception})">
            <summary>
            Отключает все расширения с указанным именем
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.RemoveExtensions(System.Predicate{`1})">
            <summary>
            Отключает все расширения, выбранные с помощью указанного метода
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.RemoveExtensions(System.Predicate{`1},System.Action{`1},System.Action{`1,System.Exception})">
            <summary>
            Отключает все расширения, выбранные с помощью указанного метода
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.RemoveExtensions">
            <summary>
            Отключает все расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.RemoveExtensions(System.Action{`1},System.Action{`1,System.Exception})">
            <summary>
            Отключает все расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.RemoveExtensionsCore(System.Func{`1,System.Object,System.Boolean},System.Object,System.Action{`1},System.Action{`1,System.Exception})">
            <summary>
            Отключает расширения, выбранные с помощью указанного фильтра
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.RemoveFilterName(`1,System.Object)">
            <summary>
            Фильтр выбирающий расширения с именем, указанным в параметре
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.RemoveFilterPredicate(`1,System.Object)">
            <summary>
            Фильтр выбирающий расширения с помощью метода указанного в параметре
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.RemoveFilterAll(`1,System.Object)">
            <summary>
            Фильтр выбирающий все расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.OnExtensionLoading(`1)">
            <summary>
            Расширение подключается
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.OnExtensionLoaded(`1)">
            <summary>
            Расширение подключено
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.OnExtensionLoadFailed(`1,System.Type,System.Reflection.Assembly,System.Exception)">
            <summary>
            Ошибка при подключении расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.OnExtensionRemoving(`1)">
            <summary>
            Расширение отключается
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.OnExtensionRemoved(`1)">
            <summary>
            Расширение отключено
            </summary>
        </member>
        <member name="M:RMLib.ExtensibleObject`2.OnExtensionRemoveFailed(`1,System.Exception)">
            <summary>
            Ошибка при отключении расширения
            </summary>
        </member>
        <member name="P:RMLib.ExtensibleObject`2.Extensions">
            <summary>
            Возвращает список расширений
            </summary>
        </member>
        <member name="T:RMLib.IApplication">
            <summary>
            Интерфейс приложения
            </summary>
        </member>
        <member name="M:RMLib.IApplication.Run(System.Object)">
            <summary>
            Запускает приложение
            </summary>
        </member>
        <member name="M:RMLib.IApplication.Shutdown">
            <summary>
            Останавливает приложение
            </summary>
        </member>
        <member name="M:RMLib.IApplication.ApplySettings(RMLib.SettingsResult)">
            <summary>
            Применяет настройки
            </summary>
        </member>
        <member name="M:RMLib.IApplication.UserShutDownRequest">
            <summary>
            Запрос пользователя на останов приложения
            </summary>
        </member>
        <member name="E:RMLib.IApplication.BeforeRun">
            <summary>
            Приложение запускается
            </summary>
        </member>
        <member name="E:RMLib.IApplication.AfterRun">
            <summary>
            Приложение запущено
            </summary>
        </member>
        <member name="E:RMLib.IApplication.BeforeShutdown">
            <summary>
            Приложение останавливается
            </summary>
        </member>
        <member name="E:RMLib.IApplication.AfterShutdown">
            <summary>
            Приложение остановлено
            </summary>
        </member>
        <member name="E:RMLib.IApplication.SettingsChanged">
            <summary>
            Настройки приложения изменились
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.OnBeforeRun(System.Object)">
            <summary>
            Поднимает событие BeforeRun
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.OnAfterRun(System.Object)">
            <summary>
            Поднимает событие AfterRun
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.OnBeforeShutdown(System.Object)">
            <summary>
            Поднимает событие BeforeShutdown
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.OnAfterShutdown(System.Object)">
            <summary>
            Поднимает событие AfterShutdown
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.OnSettingsChanged(RMLib.SettingsResult)">
            <summary>
            днимает событие SettingsChanged
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.Run(System.Object)">
            <summary>
            Запускает приложение
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.Shutdown">
            <summary>
            Останавливает приложение
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.ApplySettings(RMLib.SettingsResult)">
            <summary>
            Применяет настройки
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.UserShutDownRequest">
            <summary>
            Запрос пользователя на останов приложения
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.RunCore">
            <summary>
            Выполняется при запуске приложения
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.ShutdownCore">
            <summary>
            Выполняется при останове приложения
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.ApplySettingsCore(RMLib.SettingsResult)">
            <summary>
            Выполняется при применении настроек
            </summary>
        </member>
        <member name="M:RMLib.ApplicationObject`2.UserShutDownRequestCore">
            <summary>
            Выполняется при запросе пользователя на останов приложения
            </summary>
        </member>
        <member name="P:RMLib.ApplicationObject`2.IsRunning">
            <summary>
            Возвращает true, если приложение запущено, иначе false
            </summary>
        </member>
        <member name="P:RMLib.ApplicationObject`2.ServiceContainer">
            <summary>
            Возвращает контейнер сервисов
            </summary>
        </member>
        <member name="E:RMLib.ApplicationObject`2.BeforeRun">
            <summary>
            Приложение запускается
            </summary>
        </member>
        <member name="E:RMLib.ApplicationObject`2.AfterRun">
            <summary>
            Приложение запущено
            </summary>
        </member>
        <member name="E:RMLib.ApplicationObject`2.BeforeShutdown">
            <summary>
            Приложение останавливается
            </summary>
        </member>
        <member name="E:RMLib.ApplicationObject`2.AfterShutdown">
            <summary>
            Приложение остановлено
            </summary>
        </member>
        <member name="E:RMLib.ApplicationObject`2.SettingsChanged">
            <summary>
            Настройки приложения изменились
            </summary>
        </member>
        <member name="T:RMLib.CrcCalculatorStream">
            <summary>
            A Stream that calculates a CRC32 (a checksum) on all bytes read,
            or on all bytes written.
            </summary>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.#ctor(System.IO.Stream)">
            <summary>
            The default constructor.
            </summary>
            <remarks>
              <para>
                Instances returned from this constructor will leave the underlying
                stream open upon Close().  The stream uses the default CRC32
                algorithm, which implies a polynomial of 0xEDB88320.
              </para>
            </remarks>
            <param name="stream">The underlying stream</param>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
              The constructor allows the caller to specify how to handle the
              underlying stream at close.
            </summary>
            <remarks>
              <para>
                The stream uses the default CRC32 algorithm, which implies a
                polynomial of 0xEDB88320.
              </para>
            </remarks>
            <param name="stream">The underlying stream</param>
            <param name="leaveOpen">true to leave the underlying stream
            open upon close of the <c>CrcCalculatorStream</c>; false otherwise.</param>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.#ctor(System.IO.Stream,System.Int64)">
            <summary>
              A constructor allowing the specification of the length of the stream
              to read.
            </summary>
            <remarks>
              <para>
                The stream uses the default CRC32 algorithm, which implies a
                polynomial of 0xEDB88320.
              </para>
              <para>
                Instances returned from this constructor will leave the underlying
                stream open upon Close().
              </para>
            </remarks>
            <param name="stream">The underlying stream</param>
            <param name="length">The length of the stream to slurp</param>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.#ctor(System.IO.Stream,System.Int64,System.Boolean)">
            <summary>
              A constructor allowing the specification of the length of the stream
              to read, as well as whether to keep the underlying stream open upon
              Close().
            </summary>
            <remarks>
              <para>
                The stream uses the default CRC32 algorithm, which implies a
                polynomial of 0xEDB88320.
              </para>
            </remarks>
            <param name="stream">The underlying stream</param>
            <param name="length">The length of the stream to slurp</param>
            <param name="leaveOpen">true to leave the underlying stream
            open upon close of the <c>CrcCalculatorStream</c>; false otherwise.</param>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.#ctor(System.IO.Stream,System.Int64,System.Boolean,RMLib.CRC32)">
            <summary>
              A constructor allowing the specification of the length of the stream
              to read, as well as whether to keep the underlying stream open upon
              Close(), and the CRC32 instance to use.
            </summary>
            <remarks>
              <para>
                The stream uses the specified CRC32 instance, which allows the
                application to specify how the CRC gets calculated.
              </para>
            </remarks>
            <param name="stream">The underlying stream</param>
            <param name="length">The length of the stream to slurp</param>
            <param name="leaveOpen">true to leave the underlying stream
            open upon close of the <c>CrcCalculatorStream</c>; false otherwise.</param>
            <param name="crc32">the CRC32 instance to use to calculate the CRC32</param>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read from the stream
            </summary>
            <param name="buffer">the buffer to read</param>
            <param name="offset">the offset at which to start</param>
            <param name="count">the number of bytes to read</param>
            <returns>the number of bytes actually read</returns>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write to the stream.
            </summary>
            <param name="buffer">the buffer from which to write</param>
            <param name="offset">the offset at which to start writing</param>
            <param name="count">the number of bytes to write</param>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.Flush">
            <summary>
            Flush the stream.
            </summary>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seeking is not supported on this stream. This method always throws
            <see cref="T:System.NotSupportedException"/>
            </summary>
            <param name="offset">N/A</param>
            <param name="origin">N/A</param>
            <returns>N/A</returns>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.SetLength(System.Int64)">
            <summary>
            This method always throws
            <see cref="T:System.NotSupportedException"/>
            </summary>
            <param name="value">N/A</param>
        </member>
        <member name="M:RMLib.CrcCalculatorStream.Close">
            <summary>
            Closes the stream.
            </summary>
        </member>
        <member name="P:RMLib.CrcCalculatorStream.TotalBytesSlurped">
             <summary>
               Gets the total number of bytes run through the CRC32 calculator.
             </summary>
            
             <remarks>
               This is either the total number of bytes read, or the total number of
               bytes written, depending on the direction of this stream.
             </remarks>
        </member>
        <member name="P:RMLib.CrcCalculatorStream.Crc">
            <summary>
              Provides the current CRC for all blocks slurped in.
            </summary>
            <remarks>
              <para>
                The running total of the CRC is kept as data is written or read
                through the stream.  read this property after all reads or writes to
                get an accurate CRC for the entire stream.
              </para>
            </remarks>
        </member>
        <member name="P:RMLib.CrcCalculatorStream.LeaveOpen">
            <summary>
              Indicates whether the underlying stream will be left open when the
              <c>CrcCalculatorStream</c> is Closed.
            </summary>
            <remarks>
              <para>
                Set this at any point before calling <see cref="M:RMLib.CrcCalculatorStream.Close"/>.
              </para>
            </remarks>
        </member>
        <member name="P:RMLib.CrcCalculatorStream.CanRead">
            <summary>
            Indicates whether the stream supports reading.
            </summary>
        </member>
        <member name="P:RMLib.CrcCalculatorStream.CanSeek">
            <summary>
              Indicates whether the stream supports seeking.
            </summary>
            <remarks>
              <para>
                Always returns false.
              </para>
            </remarks>
        </member>
        <member name="P:RMLib.CrcCalculatorStream.CanWrite">
            <summary>
            Indicates whether the stream supports writing.
            </summary>
        </member>
        <member name="P:RMLib.CrcCalculatorStream.Length">
            <summary>
              Returns the length of the underlying stream.
            </summary>
        </member>
        <member name="P:RMLib.CrcCalculatorStream.Position">
            <summary>
              The getter for this property returns the total bytes read.
              If you use the setter, it will throw
            <see cref="T:System.NotSupportedException"/>.
            </summary>
        </member>
        <member name="M:RMLib.CRC32.#ctor">
            <summary>
              Create an instance of the CRC32 class using the default settings: no
              bit reversal, and a polynomial of 0xEDB88320.
            </summary>
        </member>
        <member name="M:RMLib.CRC32.#ctor(System.Boolean)">
            <summary>
              Create an instance of the CRC32 class, specifying whether to reverse
              data bits or not.
            </summary>
            <param name='reverseBits'>
              specify true if the instance should reverse data bits.
            </param>
        </member>
        <member name="M:RMLib.CRC32.#ctor(System.Int32,System.Boolean)">
            <summary>
              Create an instance of the CRC32 class, specifying the polynomial and
              whether to reverse data bits or not.
            </summary>
            <param name='polynomial'>
              The polynomial to use for the CRC, expressed in the reversed (LSB)
              format: the highest ordered bit in the polynomial value is the
              coefficient of the 0th power; the second-highest order bit is the
              coefficient of the 1 power, and so on. Expressed this way, the
              polynomial for the CRC-32C used in IEEE 802.3, is 0xEDB88320.
            </param>
            <param name='reverseBits'>
              specify true if the instance should reverse data bits.
            </param>
        </member>
        <member name="M:RMLib.CRC32.GetCrc32(System.IO.Stream)">
            <summary>
            Returns the CRC32 for the specified stream.
            </summary>
            <param name="input">The stream over which to calculate the CRC32</param>
            <returns>the CRC32 calculation</returns>
        </member>
        <member name="M:RMLib.CRC32.GetCrc32AndCopy(System.IO.Stream,System.IO.Stream)">
            <summary>
            Returns the CRC32 for the specified stream, and writes the input into the
            output stream.
            </summary>
            <param name="input">The stream over which to calculate the CRC32</param>
            <param name="output">The stream into which to deflate the input</param>
            <returns>the CRC32 calculation</returns>
        </member>
        <member name="M:RMLib.CRC32.ComputeCrc32(System.Int32,System.Byte)">
            <summary>
              Get the CRC32 for the given (word,byte) combo.
            </summary>
            <param name="W">The word to start with.</param>
            <param name="B">The byte to combine it with.</param>
            <returns>The CRC-ized result.</returns>
        </member>
        <member name="M:RMLib.CRC32.SlurpBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Update the value for the running CRC32 using the given block of bytes.
            This is useful when using the CRC32() class in a Stream.
            </summary>
            <param name="block">block of bytes to slurp</param>
            <param name="offset">starting point in the block</param>
            <param name="count">how many bytes within the block to slurp</param>
        </member>
        <member name="M:RMLib.CRC32.UpdateCRC(System.Byte)">
            <summary>
              Process one byte in the CRC.
            </summary>
            <param name = "b">the byte to include into the CRC .  </param>
        </member>
        <member name="M:RMLib.CRC32.UpdateCRC(System.Byte,System.Int32)">
            <summary>
              Process a run of N identical bytes into the CRC.
            </summary>
            <remarks>
              <para>
                This method serves as an optimization for updating the CRC when a
                run of identical bytes is found. Rather than passing in a buffer of
                length n, containing all identical bytes b, this method accepts the
                byte value and the length of the (virtual) buffer - the length of
                the run.
              </para>
            </remarks>
            <param name = "b">the byte to include into the CRC.  </param>
            <param name = "n">the number of times that byte should be repeated. </param>
        </member>
        <member name="M:RMLib.CRC32.Combine(System.Int32,System.Int32)">
            <summary>
              Combines the given CRC32 value with the current running total.
            </summary>
            <remarks>
              This is useful when using a divide-and-conquer approach to
              calculating a CRC.  Multiple threads can each calculate a
              CRC32 on a segment of the data, and then combine the
              individual CRC32 values at the end.
            </remarks>
            <param name="crc">the crc value to be combined with this one</param>
            <param name="length">the length of data the CRC value was calculated on</param>
        </member>
        <member name="M:RMLib.CRC32.Reset">
            <summary>
              Reset the CRC-32 class - clear the CRC "remainder register."
            </summary>
            <remarks>
              <para>
                Use this when employing a single instance of this class to compute
                multiple, distinct CRCs on multiple, distinct data blocks.
              </para>
            </remarks>
        </member>
        <member name="P:RMLib.CRC32.TotalBytesRead">
            <summary>
              Indicates the total number of bytes applied to the CRC.
            </summary>
        </member>
        <member name="P:RMLib.CRC32.Crc32Result">
            <summary>
            Indicates the current CRC for all blocks slurped in.
            </summary>
        </member>
        <member name="T:RMLib.VerbInvokeResult">
            <summary>
            Результат выполнения команды
            </summary>
        </member>
        <member name="F:RMLib.VerbInvokeResult.Unknown">
            <summary>
            Неизвестен
            </summary>
        </member>
        <member name="F:RMLib.VerbInvokeResult.OK">
            <summary>
            Успешно
            </summary>
        </member>
        <member name="F:RMLib.VerbInvokeResult.Error">
            <summary>
            Ошибка
            </summary>
        </member>
        <member name="F:RMLib.VerbInvokeResult.NotSupported">
            <summary>
            Команда не поддерживается
            </summary>
        </member>
        <member name="F:RMLib.VerbInvokeResult.MissingParameters">
            <summary>
            Недостаточно параметров
            </summary>
        </member>
        <member name="F:RMLib.VerbInvokeResult.InvalidParameters">
            <summary>
            Ошибка в параметрах
            </summary>
        </member>
        <member name="T:RMLib.ISupportVerbs">
            <summary>
            Определяет объект с поддержкой выполнения команд
            </summary>
        </member>
        <member name="M:RMLib.ISupportVerbs.GetVerbs">
            <summary>
            Возвращает список поддерживаемых команд
            </summary>
        </member>
        <member name="M:RMLib.ISupportVerbs.InvokeVerb(System.Int32,System.Object)">
            <summary>
            Выполняет команду с указанным идентификатором
            </summary>
        </member>
        <member name="T:RMLib.Verb">
            <summary>
            Описание команды
            </summary>
        </member>
        <member name="T:RMLib.TimerManager">
            <summary>
            Менеджер таймера
            </summary>
        </member>
        <member name="M:RMLib.TimerManager.NormalizeTime(System.DateTime)">
            <summary>
            Возвращает нормализованное время
            </summary>
        </member>
        <member name="M:RMLib.TimerManager.Start(System.DateTime)">
            <summary>
            Запуск таймера
            </summary>
        </member>
        <member name="M:RMLib.TimerManager.Stop">
            <summary>
            Останов таймера
            </summary>
        </member>
        <member name="M:RMLib.TimerManager.GetDefaultLastTime">
            <summary>
            Возвращает точку последнего события по умолчанию
            </summary>
        </member>
        <member name="M:RMLib.TimerManager.GetCurrentHour(System.DateTime,System.DateTime)">
            <summary>
            Возвращает разницу с базовым временем
            </summary>
        </member>
        <member name="M:RMLib.TimerManager.TimeThread(System.Object)">
            <summary>
            Поток тамера
            </summary>
        </member>
        <member name="T:RMLib.IExtensionObject">
            <summary>
            Базовый интерфейс расширения
            </summary>
        </member>
        <member name="E:RMLib.IExtensionObject.Attached">
            <summary>
            Расширение подключено
            </summary>
        </member>
        <member name="E:RMLib.IExtensionObject.Detached">
            <summary>
            Расширение отключено
            </summary>
        </member>
        <member name="P:RMLib.IExtensionObject.Name">
            <summary>
            Возвращает имя расширения
            </summary>
        </member>
        <member name="P:RMLib.IExtensionObject.Description">
            <summary>
            Возвращает писание расширения
            </summary>
        </member>
        <member name="P:RMLib.IExtensionObject.Priority">
            <summary>
            Возвращает приоритет расширения
            </summary>
        </member>
        <member name="T:RMLib.IExtensionObject`1">
            <summary>
            Интерфейс расширения
            </summary>
        </member>
        <member name="P:RMLib.IExtensionObject`1.Owner">
            <summary>
            Возвращает расширяемый объект
            </summary>
        </member>
        <member name="T:RMLib.ExtensionObjectComparer">
            <summary>
            Поддержка сравнения расширений
            </summary>
        </member>
        <member name="T:RMLib.ExtensionObject`1">
            <summary>
            Абстрактный базовый класс расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensionObject`1.Attach(`0)">
            <summary>
            Подключение расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensionObject`1.Detach(`0)">
            <summary>
            Отключение расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensionObject`1.OnAttach(`0)">
            <summary>
            Подключение расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensionObject`1.OnDetach(`0)">
            <summary>
            Отключение расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensionObject`1.LoadSettings">
            <summary>
            Загружает настройки расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensionObject`1.SaveSettings">
            <summary>
            Сохраняет настройки расширения
            </summary>
        </member>
        <member name="M:RMLib.ExtensionObject`1.ToString">
            <summary>
            Возвращает строковое представление расширения
            </summary>
        </member>
        <member name="P:RMLib.ExtensionObject`1.Name">
            <summary>
            Возвращает имя расширения
            </summary>
        </member>
        <member name="P:RMLib.ExtensionObject`1.Description">
            <summary>
            Возвращает описание расширения
            </summary>
        </member>
        <member name="P:RMLib.ExtensionObject`1.Priority">
            <summary>
            Возвращает приоритет расширения
            </summary>
        </member>
        <member name="P:RMLib.ExtensionObject`1.Owner">
            <summary>
            Возвращает расширяемый объект
            </summary>
        </member>
        <member name="P:RMLib.ExtensionObject`1.Settings">
            <summary>
            Возвращает настройки расширения
            </summary>
        </member>
        <member name="P:RMLib.ExtensionObject`1.Location">
            <summary>
            Возвращает путь к сборке расширения
            </summary>
        </member>
        <member name="E:RMLib.ExtensionObject`1.Attached">
            <summary>
            Расширение подключено
            </summary>
        </member>
        <member name="E:RMLib.ExtensionObject`1.Detached">
            <summary>
            Расширение отключено
            </summary>
        </member>
        <member name="T:RMLib.IExtensibleStub">
            <summary>
            Интерфейс-заглушка расширяемого приложения
            </summary>
        </member>
        <member name="T:RMLib.IExtensionStub">
            <summary>
            Интерфейс-заглушка расширения приложения
            </summary>
        </member>
        <member name="T:RMLib.SimpleApplication">
            <summary>
            Простое приложение без поддержки расширений
            </summary>
        </member>
        <member name="T:RMLib.AsyncLoader`1">
            <summary>
            Загружает данные в отдельном потоке
            </summary>
        </member>
        <member name="T:RMLib.ICancelTracking">
            <summary>
            Интерфейс для запроса признака отмены действия
            </summary>
        </member>
        <member name="P:RMLib.ICancelTracking.IsCancelled">
            <summary>
            Возвращает true, если действие отменено, иначе false
            </summary>
        </member>
        <member name="T:RMLib.LoadAsyncResult">
            <summary>
            Результат выполнения операции загрузки данных
            </summary>
        </member>
        <member name="T:RMLib.LoadCompletedEventHandler`1">
            <summary>
            Обработчик события окончания загрузки
            </summary>
        </member>
        <member name="T:RMLib.LoadCompletedEventArgs`1">
            <summary>
            Агрументы события AsyncLoader.LoadCompleted
            </summary>
        </member>
        <member name="T:RMLib.Collections.DictionaryQueue`2">
            <summary>
            Очередь, содержащая только уникальные элементы. Уникальность значение определяется ключом.
            При постановке в очередь элемента с существующим ключом его значение будет обновлено
            </summary>
        </member>
        <member name="T:RMLib.Collections.SynchronizedQueue`1">
            <summary>
            Потокобезопасная очередь
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.Enqueue(`0)">
            <summary>
            Добавляет элемент в конец очереди
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.Enqueue(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Добавляет элементы в конец очереди
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.Dequeue">
            <summary>
            Возвращает первый элемент из очереди. Элемент удаляется из очереди.
            Если очередь не содержит элементов, возращается null
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.Peek">
            <summary>
            Возвращает первый элемент очереди, не удаляя его.
            Если очередь не содержит элементов, возращается null
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.PeekOrDefault(System.Func{`0})">
            <summary>
            Возвращает первый элемент очереди, не удаляя его.
            Если очередь не содержит элементов, добавляется элемент по умолчанию
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.Clear">
            <summary>
            Удаляет все элементы из очереди
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.Contains(`0)">
            <summary>
            Возвращает true, если указанный элемент находится в очереди
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.CopyTo(`0[],System.Int32)">
            <summary>
            Копирует элементы очереди в массив, начиная с указанного индекса массива
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.ToArray">
            <summary>
            Копирует элементы коллекции в массив
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.Add(`0)">
            <summary>
            Добавляет элемент в конец очереди
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.Remove(`0)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Копирует элементы коллекции в массив, начиная с указанного индекса массива
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.GetEnumerator">
            <summary>
            Возвращает типизированный перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Предоставляет данные для сериализации
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedQueue`1.OnDeserialization(System.Object)">
            <summary>
            Завершение десериалазации
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedQueue`1.Count">
            <summary>
            Возвращает количество элементов в очереди
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedQueue`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Возвращает true, если коллекция потокобезопасна
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedQueue`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Возвращает объект, который может быть использован для синхронизации доступа к коллекции
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedQueue`1.InnerQueue">
            <summary>
            Возвращает внутренний объект очереди
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedQueue`1.Locker">
            <summary>
            Возвращает блокировщик
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedQueue`1.IsReadOnly">
            <summary>
            Всегда false
            </summary>
        </member>
        <member name="F:RMLib.CollectionExtensions.AppendItemSeparatorSpace">
            <summary>
            Признак добавления пробела к разделителю между элементами в методах GetString
            </summary>
        </member>
        <member name="F:RMLib.CollectionExtensions.AppendKeyValuePairSeparatorSpace">
            <summary>
            Признак добавления пробела к разделителю между ключом и значением в методах GetString
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.GetString(System.Collections.IEnumerable)">
            <summary>
            Возвращает строку содержащую строковые представления элементов коллекции через запятую
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.GetString(System.Collections.IEnumerable,System.Converter{System.Object,System.String})">
            <summary>
            Возвращает строку содержащую строковые представления элементов коллекции через запятую
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.GetString(System.Collections.IEnumerable,System.Converter{System.Object,System.String},System.String)">
            <summary>
            Возвращает строку содержащую строковые представления элементов коллекции, разделённые указанной строкой
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.GetString(System.Collections.IDictionary)">
            <summary>
            Возвращает строку содержащую строковые представления элементов словаря через запятую
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.GetString(System.Collections.IDictionary,System.Converter{System.Object,System.String},System.Converter{System.Object,System.String})">
            <summary>
            Возвращает строку содержащую строковые представления элементов словаря через запятую
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.GetString(System.Collections.IDictionary,System.Converter{System.Object,System.String},System.Converter{System.Object,System.String},System.String,System.String)">
            <summary>
            Возвращает строку содержащую строковые представления элементов словаря, разделённые указанными строками
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.GetString(System.Object)">
            <summary>
            Возвращает строковое представление объекта.
            Если объект является списком или словарём, возвращается соответствующее строковое представление
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Random``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Возвращает объект выбранный псевдослучайным образом из указанной последовательности
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Random``1(System.Collections.Generic.IEnumerable{``0},System.Double)">
            <summary>
            Возвращает указанный процент элементов выбранный псевдослучайным образом из последовательности
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Random``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Возвращает указанное количество элементов выбранное псевдослучайным образом из последовательности
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Split``1(System.Collections.Generic.IEnumerable{``0},System.Double)">
            <summary>
            Разделяет последовательность на несколько последовательностей, каждая из которых
            содержит указанный процент элементов исходной последовательности
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Split``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Разделяет последовательность на несколько последовательностей, каждая из которых
            содержит указанное количество элементов исходной последовательности
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Split``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
            Разделяет последовательность на две, используя указанный предикат
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Split``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>
            Разделяет последовательность на несколько, используя указанный предикат
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Insert``1(System.Collections.Generic.IList{``0},``0,System.Comparison{``0})">
            <summary>
            Добавляет указанный элемент в коллекцию по индексу, определяемому с помощью метода сравнения.
            Возвращает индекс добавленного элемента
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Weigh(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Взвешивает число по указанным значениям
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Weigh(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Int32@)">
            <summary>
            Взвешивает число по указанным значениям. В выходном параметре возвращает остаток.
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.WeighRandom(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Взвешивает число по указанным значениям с псевдослучайным распределением весов
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.WeighRandom(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Int32@)">
            <summary>
            Взвешивает число по указанным значениям с псевдослучайным распределением весов.
            В выходном параметре возвращает остаток.
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.ContainsIndex``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Возвращает true, если указанный индекс может быть использован для выбора элемента последовательности, иначе false
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Собирает словарь из двух последовательностей
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Добвляет элементы одного словаря к другому
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)">
            <summary>
            Удаляет значение с указанным ключом из словаря и возвращает удаленное значение
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Decompose(System.Collections.Generic.IDictionary{System.Int64,System.Int64})">
            <summary>
            Преобразует словарь в одномерный массив
            </summary>
        </member>
        <member name="M:RMLib.CollectionExtensions.Build(System.Int64[])">
            <summary>
            Восстанавливает словарь из одномерного массива
            </summary>
        </member>
        <member name="T:RMLib.CompressedImage">
            <summary>
            Сжатое изображение
            </summary>
        </member>
        <member name="F:RMLib.CompressedImage.Empty">
            <summary>
            Пустое изображение
            </summary>
        </member>
        <member name="M:RMLib.CompressedImage.op_Explicit(RMLib.CompressedImage)~System.Drawing.Image">
            <summary>
            Возвращает изображение
            </summary>
        </member>
        <member name="M:RMLib.CompressedImage.Clone">
            <summary>
            Возвращает копию сжатого изображения
            </summary>
        </member>
        <member name="M:RMLib.CompressedImage.GetImage">
            <summary>
            Возвращает несжатое изображение
            </summary>
        </member>
        <member name="M:RMLib.CompressedImage.CopyTo(System.Byte[],System.Int32)">
            <summary>
            Копирует сжатое изображение в указанный массив
            </summary>
        </member>
        <member name="M:RMLib.CompressedImage.CreateBufferFromStream(System.IO.Stream)">
            <summary>
            Создаёт внутренний буфер из потока
            </summary>
        </member>
        <member name="M:RMLib.CompressedImage.ToString">
            <summary>
            Возвращает строковое представление сжатого изображения
            </summary>
        </member>
        <member name="P:RMLib.CompressedImage.Size">
            <summary>
            Возвращает размер сжатого изображения
            </summary>
        </member>
        <member name="P:RMLib.CompressedImage.IsEmpty">
            <summary>
            Возвращает true, елси изображение пустое, иначе false
            </summary>
        </member>
        <member name="P:RMLib.CompressedImage.ImageBuffer">
            <summary>
            Возвращает внутренний буфер данных
            </summary>
        </member>
        <member name="T:RMLib.Compression">
            <summary>
            Методы для сжатия данных
            </summary>
        </member>
        <member name="M:RMLib.Compression.Zip(System.Byte[])">
            <summary>
            Сжимает указанный массив байт и возвращает сжатый массив
            </summary>
        </member>
        <member name="M:RMLib.Compression.Unzip(System.Byte[])">
            <summary>
            Восстанавливает исходный массив байт из сжатого
            </summary>
        </member>
        <member name="T:RMLib.EnumNameAttribute">
            <summary>
            Задаёт имя для элемента перечисления
            </summary>
        </member>
        <member name="M:RMLib.DebugHelper.CollectGarbage">
            <summary>
            Выполняет принудительный сбор мусора
            </summary>
        </member>
        <member name="T:RMLib.EventExtensions">
            <summary>
            Методы для работы с событиями
            </summary>
        </member>
        <member name="M:RMLib.EventExtensions.SafeInvoke``1(``0,System.Action{``0})">
            <summary>
            Выполняет всю цепочку вызовов делегата
            </summary>
        </member>
        <member name="M:RMLib.EventExtensions.SafeInvoke``1(``0,System.Action{``0},System.Action{System.Delegate,System.Exception})">
            <summary>
            Выполняет всю цепочку вызовов делегата с обработкой ошибок
            </summary>
        </member>
        <member name="M:RMLib.EventExtensions.SafeForeach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0},System.Action{System.Delegate,System.Exception})">
            <summary>
            Выполняет действие на элементах колллекции с обработкой ошибок
            </summary>
        </member>
        <member name="M:RMLib.EventExtensions.SafeInvoke``1(``0,System.Func{``0,System.Boolean})">
            <summary>
            Выполняет всю цепочку вызовов делегата
            </summary>
        </member>
        <member name="M:RMLib.EventExtensions.SafeInvoke``1(``0,System.Func{``0,System.Boolean},System.Action{System.Delegate,System.Exception})">
            <summary>
            Выполняет всю цепочку вызовов делегата с обработкой ошибок до тех пор, пока очередной вызов 
            не вернёт false
            </summary>
        </member>
        <member name="M:RMLib.EventExtensions.SafeForeach``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Action{System.Delegate,System.Exception})">
            <summary>
            Выполняет действие на элементах колллекции с обработкой ошибок до тех пор, пока очередное действие 
            не вернёт false
            </summary>
        </member>
        <member name="M:RMLib.EventExtensions.SafeInvoke``1(``0,System.Object,System.EventHandler{``0}@)">
            <summary>
            Потокобезопасный вызов события с указанными параметрами
            </summary>
        </member>
        <member name="T:RMLib.ExecutionPolicy">
            <summary>
            Политика выполнения действия
            </summary>
        </member>
        <member name="F:RMLib.ExecutionPolicy.OneException">
            <summary>
            Действие выполняется повторно, если в нём не возникало исключений
            </summary>
        </member>
        <member name="F:RMLib.ExecutionPolicy.MaxExceptions">
            <summary>
            Действие выполняется повторно, если в нём возникало не более указанного количества исключений
            </summary>
        </member>
        <member name="F:RMLib.ExecutionPolicy.AllowRetry">
            <summary>
            Возобновление выполнения действия по истечении указанного периода времени
            </summary>
        </member>
        <member name="T:RMLib.ExecutionBlock`1">
            <summary>
            Блок выполнения действий
            </summary>
        </member>
        <member name="M:RMLib.ExecutionBlock`1.Execute(System.Action)">
            <summary>
            Выполняет действие
            </summary>
        </member>
        <member name="M:RMLib.ExecutionBlock`1.Reset">
            <summary>
            Сбрасывает счётчики исключений
            </summary>
        </member>
        <member name="M:RMLib.ExecutionBlock`1.CanExecute(RMLib.ExecutionBlock{`0}.ActionInfo)">
            <summary>
            Возвращает true, если действие может выполняться, иначе false
            </summary>
        </member>
        <member name="M:RMLib.ExecutionBlock`1.Find(System.Action)">
            <summary>
            Возвращает информацию о действии или null, если действие выполняется впревые
            </summary>
        </member>
        <member name="P:RMLib.ExecutionBlock`1.Policy">
            <summary>
            Возвращает политику выполнения действия
            </summary>
        </member>
        <member name="P:RMLib.ExecutionBlock`1.MaxFailCount">
            <summary>
            Возвращает максимальное количество исключений, после возникновения которых 
            действие не может выполняться повторно
            </summary>
        </member>
        <member name="P:RMLib.ExecutionBlock`1.RetryTime">
            <summary>
            Возвращает период времени, по истечении которого выполнение действия может быть возобновлено
            </summary>
        </member>
        <member name="T:RMLib.Collections.SynchronizedList`1">
            <summary>
            Потокобезопасный список
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.Add(`0)">
            <summary>
            Добавляет элемент в список
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Добавляет элементы в список
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.Remove(`0)">
            <summary>
            Удаляет элемент из списка
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.RemoveAt(System.Int32)">
            <summary>
            Удаляет элемент из списка
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.Remove(System.Func{`0,System.Boolean})">
            <summary>
            Удаляет элементы, выбранные функцией из списка. Возвращает количество удалённых элементов
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.Clear">
            <summary>
            Удаляет все элементы из списка
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.Contains(`0)">
            <summary>
            Возвращает true, если список содержит указанный элемент, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.IndexOf(`0)">
            <summary>
            Возвращает индекс по которому находится элемент или -1, если элемент не найден
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.Insert(System.Int32,`0)">
            <summary>
            Вставляет элемент в список по указанному индексу
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.Sort(System.Comparison{`0})">
            <summary>
            Сортирует элементы списка
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.Find(System.Predicate{`0},`0@)">
            <summary>
            Возвращает индекс и элемент, удовлетворяющий условиям поиска, или -1 и null, если элемент не найден
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
            <summary>
            Копирует элементы коллекции в массив, начиная с указанного индекса массива
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Копирует элементы коллекции в массив, начиная с указанного индекса массива
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Добавляет элемент в список и возвращает его индекс
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Удаляет элемент из списка
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Возвращает true, если список содержит указанный элемент, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Возвращает индекс по которому находится элемент или -1, если элемент не найден
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Вставляет элемент в список по указанному индексу
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Предоставляет данные для сериализации
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedList`1.OnDeserialization(System.Object)">
            <summary>
            Завершение десериалазации
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedList`1.Count">
            <summary>
            Возвращает количество элементов в списке
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedList`1.Item(System.Int32)">
            <summary>
            Возвращает/устанавливает элемент по индексу
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedList`1.IsReadOnly">
            <summary>
            Возвращает true, если коллекция только для чтения, иначе false
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedList`1.System#Collections#IList#IsFixedSize">
            <summary>
            Возвращает true, если коллекция фиксированного размера, иначе false
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedList`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Возвращает/устанавливает элемент по индексу
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedList`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Возвращает true, если коллекция потокобезопасна, иначе false
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedList`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Возвращает объект, который может быть использован для синхронизации доступа к коллекции
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedList`1.InnerList">
            <summary>
            Возвращает внутренний объект списка
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedList`1.Locker">
            <summary>
            Возвращает блокировщик
            </summary>
        </member>
        <member name="T:RMLib.Data.DatabaseContext">
            <summary>
            Контекст работы с БД
            </summary>
        </member>
        <member name="M:RMLib.Data.DatabaseContext.Invoke(System.Action{System.Data.SqlClient.SqlConnection})">
            <summary>
            Выполняет операцию с БД SQL Server
            </summary>
        </member>
        <member name="M:RMLib.Data.DatabaseContext.Invoke(System.Action{System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction})">
            <summary>
            Выполняет транзакцию с БД SQL Server
            </summary>
        </member>
        <member name="P:RMLib.Data.DatabaseContext.ConnectionString">
            <summary>
            Возвращает/устанавливает строку соединения
            </summary>
        </member>
        <member name="T:RMLib.PathManager">
            <summary>
            Менеджер путей
            </summary>
        </member>
        <member name="M:RMLib.PathManager.JoinPaths(System.String[])">
            <summary>
            Соединяет несколько путей в строку
            </summary>
        </member>
        <member name="M:RMLib.PathManager.SplitPaths(System.String)">
            <summary>
            Разделяет строку на несколько путей
            </summary>
        </member>
        <member name="M:RMLib.PathManager.BeginInit">
            <summary>
            Начинает инициализацию менеджера путей
            </summary>
        </member>
        <member name="M:RMLib.PathManager.EndInit">
            <summary>
            Завершает инициализацию менеджера путей
            </summary>
        </member>
        <member name="M:RMLib.PathManager.Initialize">
            <summary>
            Инициализирует менеджер путей
            </summary>
        </member>
        <member name="P:RMLib.PathManager.RootPath">
            <summary>
            Возвращает путь к корневому каталогу приложения
            </summary>
        </member>
        <member name="P:RMLib.PathManager.LogPath">
            <summary>
            Возвращает путь к файлам лога
            </summary>
        </member>
        <member name="P:RMLib.PathManager.ExtensionsPath">
            <summary>
            Возвращает путь к сборкам расширений
            </summary>
        </member>
        <member name="T:RMLib.AssemblyInfo">
            <summary>
            Предоставляет информацию о сборке
            </summary>
        </member>
        <member name="P:RMLib.AssemblyInfo.Assembly">
            <summary>
            Возващает сборку
            </summary>
        </member>
        <member name="P:RMLib.AssemblyInfo.Title">
            <summary>
            Возващает название сборки
            </summary>
        </member>
        <member name="P:RMLib.AssemblyInfo.ProductName">
            <summary>
            Возващает имя продукта
            </summary>
        </member>
        <member name="P:RMLib.AssemblyInfo.Version">
            <summary>
            Возващает версию сборки
            </summary>
        </member>
        <member name="P:RMLib.AssemblyInfo.FileVersion">
            <summary>
            Возващает версию файла сборки
            </summary>
        </member>
        <member name="P:RMLib.AssemblyInfo.Copyright">
            <summary>
            Возващает информацию об авторских правах
            </summary>
        </member>
        <member name="P:RMLib.AssemblyInfo.Company">
            <summary>
            Возващает название компании-разработчика
            </summary>
        </member>
        <member name="P:RMLib.AssemblyInfo.Description">
            <summary>
            Возващает описание
            </summary>
        </member>
        <member name="M:RMLib.Collections.CollectionHelper.SetCount``1(System.Collections.IList,System.Int32,RMLib.Pool{``0})">
            <summary>
            Устанавливает количество элементов в коллекции, используя пул
            </summary>
        </member>
        <member name="M:RMLib.Collections.CollectionHelper.ToArray(System.Collections.IEnumerable,System.Type)">
            <summary>
            Копирует элементы коллекции в массив указанного типа
            </summary>
        </member>
        <member name="T:RMLib.Data.DatabaseHelper">
            <summary>
            Методы для работы с данными
            </summary>
        </member>
        <member name="M:RMLib.Data.DatabaseHelper.FindSQLServers">
            <summary>
            Возвращает список доступных SQL-серверов
            </summary>
        </member>
        <member name="M:RMLib.Data.DatabaseHelper.SafeGetString(System.Data.SqlClient.SqlDataReader,System.Int32)">
            <summary>
            Возвращает строку из поля. Если значение поля равно null, возвращает пустую строку
            </summary>
        </member>
        <member name="M:RMLib.Data.DatabaseHelper.SafeGetString(System.Data.SqlClient.SqlDataReader,System.String)">
            <summary>
            Возвращает строку из поля. Если значение поля равно null, возвращает пустую строку
            </summary>
        </member>
        <member name="M:RMLib.Data.DatabaseHelper.ToSqlBytes(System.Drawing.Image)">
            <summary>
            Упаковывает изображение в байтовый формат БД
            </summary>
        </member>
        <member name="M:RMLib.Data.DatabaseHelper.ToSqlBytes(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Упаковывает изображение в байтовый формат БД
            </summary>
        </member>
        <member name="M:RMLib.Data.DatabaseHelper.ToImage(System.Data.SqlTypes.SqlBytes)">
            <summary>
            Распаковывает изображение из байтового формата БД
            </summary>
        </member>
        <member name="M:RMLib.Data.DatabaseHelper.GetSQLServerInstanceNames">
            <summary>
            Возвращает список имён установленных экземпляров SQL сервера
            </summary>
        </member>
        <member name="M:RMLib.Data.DatabaseHelper.NormalizeSQLServerName(System.String)">
            <summary>
            Возвращает нормализованное имя SQL сервера для соединения с БД
            </summary>
        </member>
        <member name="T:RMLib.TimeSpanElements">
            <summary>
            Элементы TimeSpan
            </summary>
        </member>
        <member name="F:RMLib.TimeSpanElements.Default">
            <summary>
            По умолчанию
            </summary>
        </member>
        <member name="F:RMLib.TimeSpanElements.Days">
            <summary>
            Дни
            </summary>
        </member>
        <member name="F:RMLib.TimeSpanElements.Milliseconds">
            <summary>
            Миллисекунды
            </summary>
        </member>
        <member name="F:RMLib.TimeSpanElements.All">
            <summary>
            Все элементы
            </summary>
        </member>
        <member name="T:RMLib.DateTimeHelper">
            <summary>
            Методы для работы с датой и временем
            </summary>
        </member>
        <member name="M:RMLib.DateTimeHelper.GetString(System.DateTime)">
            <summary>
            Возвращает строковое представление DateTime в формате определённом констатной DateTimeFormat
            </summary>
        </member>
        <member name="M:RMLib.DateTimeHelper.GetString(System.TimeSpan)">
            <summary>
            Возвращает строковое представление TimeSpan
            </summary>
        </member>
        <member name="M:RMLib.DateTimeHelper.GetString(System.TimeSpan,RMLib.TimeSpanElements)">
            <summary>
            Возвращает строковое представление TimeSpan
            </summary>
        </member>
        <member name="M:RMLib.DateTimeHelper.ToTimeSpan(System.DateTime)">
            <summary>
            Возвращает интервал времени относительно DateTime.MinValue
            </summary>
        </member>
        <member name="M:RMLib.DateTimeHelper.TrimMilliseconds(System.DateTime)">
            <summary>
            Возвращает дату/время без миллисекунд
            </summary>
        </member>
        <member name="M:RMLib.DateTimeHelper.TrimMilliseconds(System.TimeSpan)">
            <summary>
            Возвращает TimeSpan без миллисекунд
            </summary>
        </member>
        <member name="T:RMLib.ImageExtensions">
            <summary>
            Методы для работы с изображениями
            </summary>
        </member>
        <member name="M:RMLib.ImageExtensions.Resize(System.Drawing.Image,System.Drawing.Size)">
            <summary>
            Изменяет размер изображения
            </summary>
        </member>
        <member name="M:RMLib.ImageExtensions.Resize(System.Drawing.Image,System.Drawing.Size,System.Boolean)">
            <summary>
            Изменяет размер изображения
            </summary>
        </member>
        <member name="M:RMLib.ImageExtensions.Crop(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Возвращает указанную область изображения
            </summary>
        </member>
        <member name="M:RMLib.ImageExtensions.MakeGrayscale(System.Drawing.Image)">
            <summary>
            Возвращает чёрно-белую копию изображения
            </summary>
        </member>
        <member name="M:RMLib.ImageExtensions.Rotate(System.Drawing.Image,System.Single)">
            <summary>
            Поворачивает изображение на указанный угол
            </summary>
        </member>
        <member name="M:RMLib.ImageExtensions.Rotate(System.Drawing.Image,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Поворачивает изображение на указанный угол
            </summary>
        </member>
        <member name="M:RMLib.ImageExtensions.EnsureAspectRatio(System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Возвращает новый размер изображения с учётом пропорций
            </summary>
        </member>
        <member name="M:RMLib.ImageExtensions.GetEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Возвращает кодек для указанного формата изображения
            </summary>
        </member>
        <member name="M:RMLib.ImageExtensions.GetString(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Возвращает строковое представление формата изображения
            </summary>
        </member>
        <member name="T:RMLib.Interop.InteropHelper">
            <summary>
            Interop helper methods
            </summary>
        </member>
        <member name="M:RMLib.Interop.InteropHelper.RegisterComLibrary(System.String)">
            <summary>
            Registers COM library
            </summary>
        </member>
        <member name="M:RMLib.Interop.InteropHelper.GetVolumeSerial(System.String)">
            <summary>
            Get volume serial number
            </summary>
        </member>
        <member name="T:RMLib.IApplicationReportProvider">
            <summary>
            Поставщик отчётов о состоянии приложения
            </summary>
        </member>
        <member name="M:RMLib.IApplicationReportProvider.CreateApplicationReport">
            <summary>
            Создаёт отчёт о состоянии приложения
            </summary>
        </member>
        <member name="T:RMLib.Collections.LimitedQueuePolicy">
            <summary>
            Действия при переполнении очереди
            </summary>
        </member>
        <member name="F:RMLib.Collections.LimitedQueuePolicy.None">
            <summary>
            Никаких действий (обычная очередь)
            </summary>
        </member>
        <member name="F:RMLib.Collections.LimitedQueuePolicy.Limit">
            <summary>
            Сообщения не ставятся в очередь
            </summary>
        </member>
        <member name="F:RMLib.Collections.LimitedQueuePolicy.Remove">
            <summary>
            Самое старое сообщение удаляется, новое добавляется
            </summary>
        </member>
        <member name="F:RMLib.Collections.LimitedQueuePolicy.Clear">
            <summary>
            Очередь очищается
            </summary>
        </member>
        <member name="T:RMLib.Collections.LimitedQueue`1">
            <summary>
            Очередь с ограничением количества элементов
            </summary>
        </member>
        <member name="M:RMLib.Collections.LimitedQueue`1.OnQueueFull">
            <summary>
            Поднимает событие QueueFull
            </summary>
        </member>
        <member name="M:RMLib.Collections.LimitedQueue`1.OnItemRemoved(`0)">
            <summary>
            Поднимает событие ItemRemoved
            </summary>
        </member>
        <member name="E:RMLib.Collections.LimitedQueue`1.QueueFull">
            <summary>
            Очередь заполнена
            </summary>
        </member>
        <member name="E:RMLib.Collections.LimitedQueue`1.ItemRemoved">
            <summary>
            Удалено старое сообщение
            </summary>
        </member>
        <member name="T:RMLib.Interop.SystemMetric">
            <summary>
            Flags used with the Windows API GetSystemMetrics(SystemMetric smIndex)
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXSCREEN">
            <summary>
             Width of the screen of the primary display monitor, in pixels. 
            This is the same values obtained by calling GetDeviceCaps as 
            follows: GetDeviceCaps( hdcPrimaryMonitor, HORZRES).
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYSCREEN">
            <summary>
            Height of the screen of the primary display monitor, in pixels. 
            This is the same values obtained by calling GetDeviceCaps as 
            follows: GetDeviceCaps( hdcPrimaryMonitor, VERTRES).
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYVSCROLL">
            <summary>
            Width of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXVSCROLL">
            <summary>
            Height of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYCAPTION">
            <summary>
            Height of a caption area, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXBORDER">
            <summary>
            Width of a window border, in pixels. This is equivalent to the
            SM_CXEDGE value for windows with the 3-D look. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYBORDER">
            <summary>
            Height of a window border, in pixels. This is equivalent to the 
            SM_CYEDGE value for windows with the 3-D look. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXDLGFRAME">
            <summary>
            Thickness of the frame around the perimeter of a window that has
            a caption but is not sizable, in pixels. SM_CXFIXEDFRAME is the
            height of the horizontal border and SM_CYFIXEDFRAME is the width
            of the vertical border. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYDLGFRAME">
            <summary>
            Thickness of the frame around the perimeter of a window that has
            a caption but is not sizable, in pixels. SM_CXFIXEDFRAME is the
            height of the horizontal border and SM_CYFIXEDFRAME is the width
            of the vertical border. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYVTHUMB">
            <summary>
            Height of the thumb box in a vertical scroll bar, in pixels
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXHTHUMB">
            <summary>
            Width of the thumb box in a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXICON">
            <summary>
            Default width of an icon, in pixels. The LoadIcon function can 
            load only icons with the dimensions specified by SM_CXICON and
            SM_CYICON
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYICON">
            <summary>
            Default height of an icon, in pixels. The LoadIcon function can 
            load only icons with the dimensions SM_CXICON and SM_CYICON.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXCURSOR">
            <summary>
            Width of a cursor, in pixels. The system cannot create 
            cursors of other sizes.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYCURSOR">
            <summary>
            Height of a cursor, in pixels. The system cannot create cursors
             of other sizes.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYMENU">
            <summary>
            Height of a single-line menu bar, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXFULLSCREEN">
            <summary>
            Width of the client area for a full-screen window on the primary
            display monitor, in pixels. To get the coordinates of the portion 
            of the screen not obscured by the system taskbar or by application 
            desktop toolbars, call the SystemParametersInfo function with the
            SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYFULLSCREEN">
            <summary>
            Height of the client area for a full-screen window on the primary
            display monitor, in pixels. To get the coordinates of the portion
            of the screen not obscured by the system taskbar or by application
            desktop toolbars, call the SystemParametersInfo function with the
            SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYKANJIWINDOW">
            <summary>
            For double byte character set versions of the system, this is the
            height of the Kanji window at the bottom of the screen, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_MOUSEWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a wheel is installed; zero otherwise
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYHSCROLL">
            <summary>
            Height of the arrow bitmap on a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXHSCROLL">
            <summary>
            Width of the arrow bitmap on a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_DEBUG">
            <summary>
            Nonzero if the debug version of User.exe is installed; zero
            otherwise.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_SWAPBUTTON">
            <summary>
            Nonzero if the left and right mouse buttons are reversed; zero
            otherwise.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_RESERVED1">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_RESERVED2">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_RESERVED3">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_RESERVED4">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXMIN">
            <summary>
            Minimum width of a window, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYMIN">
            <summary>
            Minimum height of a window, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXSIZE">
            <summary>
            Width of a button in a window's caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYSIZE">
            <summary>
            Height of a button in a window's caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXFRAME">
            <summary>
            Thickness of the sizing border around the perimeter of a window 
            that can be resized, in pixels. SM_CXSIZEFRAME is the width of the
            horizontal border, and SM_CYSIZEFRAME is the height of the
            vertical border. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYFRAME">
            <summary>
            Thickness of the sizing border around the perimeter of a window 
            that can be resized, in pixels. SM_CXSIZEFRAME is the width of the
            horizontal border, and SM_CYSIZEFRAME is the height of the 
            vertical border. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXMINTRACK">
            <summary>
            Minimum tracking width of a window, in pixels. The user cannot drag
            the window frame to a size smaller than these dimensions. A window
            can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYMINTRACK">
            <summary>
            Minimum tracking height of a window, in pixels. The user cannot 
            drag the window frame to a size smaller than these dimensions. A 
            window can override this value by processing the WM_GETMINMAXINFO
            message
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXDOUBLECLK">
            <summary>
            Width of the rectangle around the location of a first click in a 
            double-click sequence, in pixels. The second click must occur 
            within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK 
            for the system to consider the two clicks a double-click
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYDOUBLECLK">
            <summary>
            Height of the rectangle around the location of a first click in a
            double-click sequence, in pixels. The second click must occur 
            within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK
            for the system to consider the two clicks a double-click. (The two
            clicks must also occur within a specified time.) 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXICONSPACING">
            <summary>
            Width of a grid cell for items in large icon view, in pixels. Each
            item fits into a rectangle of size SM_CXICONSPACING by 
            SM_CYICONSPACING when arranged. This value is always greater 
            than or equal to SM_CXICON
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYICONSPACING">
            <summary>
            Height of a grid cell for items in large icon view, in pixels. 
            Each item fits into a rectangle of size SM_CXICONSPACING by 
            SM_CYICONSPACING when arranged. This value is always greater than
            or equal to SM_CYICON.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_MENUDROPALIGNMENT">
            <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding
            menu-bar item; zero if the menus are left-aligned.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_PENWINDOWS">
            <summary>
            Nonzero if the Microsoft Windows for Pen computing extensions are
            installed; zero otherwise.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_DBCSENABLED">
            <summary>
            Nonzero if User32.dll supports DBCS; zero otherwise. 
            (WinMe/95/98): Unicode
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CMOUSEBUTTONS">
            <summary>
            Number of buttons on mouse, or zero if no mouse is installed.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXFIXEDFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0  
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYFIXEDFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXSIZEFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYSIZEFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_SECURE">
            <summary>
            Nonzero if security is present; zero otherwise.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXEDGE">
            <summary>
            Width of a 3-D border, in pixels. This is the 3-D counterpart 
            of SM_CXBORDER.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYEDGE">
            <summary>
            Height of a 3-D border, in pixels. This is the 3-D counterpart 
            of SM_CYBORDER.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXMINSPACING">
            <summary>
            Width of a grid cell for a minimized window, in pixels. Each 
            minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CXMINIMIZED.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYMINSPACING">
            <summary>
            Height of a grid cell for a minimized window, in pixels. Each 
            minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CYMINIMIZED.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXSMICON">
            <summary>
            Recommended width of a small icon, in pixels. Small icons typically
            appear in window captions and in small icon view
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYSMICON">
            <summary>
            Recommended height of a small icon, in pixels. Small icons 
            typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYSMCAPTION">
            <summary>
            Height of a small caption, in pixels
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXSMSIZE">
            <summary>
            Width of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYSMSIZE">
            <summary>
            Height of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXMENUSIZE">
            <summary>
            Width of menu bar buttons, such as the child window close button
            used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYMENUSIZE">
            <summary>
            Height of menu bar buttons, such as the child window close button
            used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_ARRANGE">
            <summary>
            Flags specifying how the system arranged minimized windows
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXMINIMIZED">
            <summary>
            Width of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYMINIMIZED">
            <summary>
            Height of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXMAXTRACK">
            <summary>
            Default maximum width of a window that has a caption and sizing 
            borders, in pixels. This metric refers to the entire desktop. The
            user cannot drag the window frame to a size larger than these 
            dimensions. A window can override this value by processing the 
            WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYMAXTRACK">
            <summary>
            Default maximum height of a window that has a caption and sizing 
            borders, in pixels. This metric refers to the entire desktop. The
            user cannot drag the window frame to a size larger than these 
            dimensions. A window can override this value by processing the 
            WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXMAXIMIZED">
            <summary>
            Default width, in pixels, of a maximized top-level window on the
            primary display monitor.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYMAXIMIZED">
            <summary>
            Default height, in pixels, of a maximized top-level window on the 
            primary display monitor.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_NETWORK">
            <summary>
            Least significant bit is set if a network is present; otherwise, 
            it is cleared. The other bits are reserved for future use
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CLEANBOOT">
            <summary>
            Value that specifies how the system was started: 0-normal, 
            1-failsafe, 2-failsafe /w net
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXDRAG">
            <summary>
            Width of a rectangle centered on a drag point to allow for limited
            movement of the mouse pointer before a drag operation begins, 
            in pixels. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYDRAG">
            <summary>
            Height of a rectangle centered on a drag point to allow for limited
            movement of the mouse pointer before a drag operation begins. This 
            value is in pixels. It allows the user to click and release the 
            mouse button easily without unintentionally starting a drag 
            operation.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_SHOWSOUNDS">
            <summary>
            Nonzero if the user requires an application to present information
            visually in situations where it would otherwise present the 
            information only in audible form; zero otherwise. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXMENUCHECK">
            <summary>
            Width of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYMENUCHECK">
            <summary>
            Height of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_SLOWMACHINE">
            <summary>
            Nonzero if the computer has a low-end (slow) processor; 
            zero otherwise.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_MIDEASTENABLED">
            <summary>
            Nonzero if the system is enabled for Hebrew and Arabic languages,
            zero if not.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_MOUSEPRESENT">
            <summary>
            Nonzero if a mouse is installed; zero otherwise. This value is 
            rarely zero, because of support for virtual mice and because some 
            systems detect the presence of the port instead of the presence of
            a mouse.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_XVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Coordinate of the top of the virtual screen.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_YVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Coordinate of the left of the virtual screen.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Width of the virtual screen.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Height of the virtual screen.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CMONITORS">
            <summary>
            Number of display monitors on the desktop.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_SAMEDISPLAYFORMAT">
            <summary>
            Windows XP (v5.1+) Nonzero if all the display monitors have the 
            same color format, zero otherwise. Note that two displays can have
            the same bit depth, but different color formats. For example, the 
            red, green, and blue pixels can be encoded with different numbers
            of bits, or those bits can be located in different places in a 
            pixel's color value. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_IMMENABLED">
            <summary>
            Windows XP (v5.1+) Nonzero if Input Method Manager/Input Method 
            Editor features are enabled; zero otherwise.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CXFOCUSBORDER">
            <summary>
            Windows XP (v5.1+) Width of the left and right edges of the focus 
            rectangle drawn by DrawFocusRect. This value is in pixels. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CYFOCUSBORDER">
            <summary>
            Windows XP (v5.1+) Height of the top and bottom edges of the focus 
            rectangle drawn by DrawFocusRect. This value is in pixels. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_TABLETPC">
            <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC 
            edition, zero if not.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_MEDIACENTER">
            <summary>
            Nonzero if the current operating system is the Windows XP, Media 
            Center Edition, zero if not.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CMETRICS_OTHER">
            <summary>
            Metrics Other
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CMETRICS_2000">
            <summary>
            Metrics Windows 2000
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_CMETRICS_NT">
            <summary>
            Metrics Windows NT
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_REMOTESESSION">
            <summary>
            Windows XP (v5.1+) This system metric is used in a Terminal 
            Services environment. If the calling process is associated with a 
            Terminal Services client session, the return value is nonzero. If 
            the calling process is associated with the Terminal Server console 
            session, the return value is zero. The console session is not 
            necessarily the physical console - see WTSGetActiveConsoleSessionId 
            for more information. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_SHUTTINGDOWN">
            <summary>
            Windows XP (v5.1+) Nonzero if the current session is shutting down; 
            zero otherwise.
            </summary>
        </member>
        <member name="F:RMLib.Interop.SystemMetric.SM_REMOTECONTROL">
            <summary>
            Windows XP (v5.1+) This system metric is used in a Terminal 
            Services environment. Its value is nonzero if the current session 
            is remotely controlled; zero otherwise.
            </summary>
        </member>
        <member name="T:RMLib.Interop.ShowWindowCommands">
            <summary>
            Window commands
            </summary>
        </member>
        <member name="T:RMLib.Interop.GdipStatus">
            <summary>
            GDI+ status
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_RENAMEITEM">
            <summary>
            The name of a nonfolder item has changed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the  previous PIDL or name of the item. dwItem2 contains the new PIDL or name of the item.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_CREATE">
            <summary>
            A nonfolder item has been created. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the item that was created. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_DELETE">
            <summary>
            A nonfolder item has been deleted. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the item that was deleted. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_MKDIR">
            <summary>
            A folder has been created. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the folder that was created. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_RMDIR">
            <summary>
            A folder has been removed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the folder that was removed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_MEDIAINSERTED">
            <summary>
            Storage media has been inserted into a drive. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive that contains the new media. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_MEDIAREMOVED">
            <summary>
            Storage media has been removed from a drive. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive from which the media was removed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_DRIVEREMOVED">
            <summary>
            A drive has been removed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive that was removed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_DRIVEADD">
            <summary>
            A drive has been added. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive that was added. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_NETSHARE">
            <summary>
            A folder on the local computer is being shared via the network. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the folder that is being shared. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_NETUNSHARE">
            <summary>
            A folder on the local computer is no longer being shared via the network. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the folder that is no longer being shared. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_ATTRIBUTES">
            <summary>
            The attributes of an item or folder have changed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the item or folder that has changed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_UPDATEDIR">
            <summary>
            The contents of an existing folder have changed, but the folder still exists and has not been renamed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the folder that has changed. dwItem2 is not used and should be NULL. If a folder has been created, deleted, or renamed, use SHCNE_MKDIR, SHCNE_RMDIR, or SHCNE_RENAMEFOLDER, respectively, instead.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_UPDATEITEM">
            <summary>
            An existing nonfolder item has changed, but the item still exists and has not been renamed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the item that has changed. dwItem2 is not used and should be NULL. If a nonfolder item has been created, deleted, or renamed, use SHCNE_CREATE, SHCNE_DELETE, or SHCNE_RENAMEITEM, respectively, instead.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_SERVERDISCONNECT">
            <summary>
            The computer has disconnected from a server. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the server from which the computer was disconnected. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_UPDATEIMAGE">
            <summary>
            An image in the system image list has changed. SHCNF_DWORD must be specified in uFlags. dwItem1 contains the index in the system image list that has changed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_DRIVEADDGUI">
            <summary>
            A drive has been added and the Shell should create a new window for the drive. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive that was added. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_RENAMEFOLDER">
            <summary>
            The name of a folder has changed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the previous pointer to an item identifier list (PIDL) or name of the folder. dwItem2 contains the new PIDL or name of the folder.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_FREESPACE">
            <summary>
            The amount of free space on a drive has changed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive on which the free space changed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_EXTENDED_EVENT">
            <summary>
            Not currently used.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_ASSOCCHANGED">
            <summary>
            A file type association has changed. SHCNF_IDLIST must be specified in the uFlags parameter. dwItem1 and dwItem2 are not used and must be NULL.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_DISKEVENTS">
            <summary>
            Specifies a combination of all of the disk event identifiers.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_GLOBALEVENTS">
            <summary>
            Specifies a combination of all of the global event identifiers. 
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_ALLEVENTS">
            <summary>
            All events have occurred.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationEvents.SHCNE_INTERRUPT">
            <summary>
            The specified event occurred as a result of a system interrupt. As this value modifies other event values, it cannot be used alone.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationFlags.SHCNF_IDLIST">
            <summary>
            dwItem1 and dwItem2 are the addresses of ITEMIDLIST structures that represent the item(s) affected by the change. Each ITEMIDLIST must be relative to the desktop folder.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationFlags.SHCNF_PATHA">
            <summary>
            dwItem1 and dwItem2 are the addresses of null-terminated strings of maximum length MAX_PATH that contain the full path names of the items affected by the change.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationFlags.SHCNF_PRINTERA">
            <summary>
            dwItem1 and dwItem2 are the addresses of null-terminated strings that represent the friendly names of the printer(s) affected by the change.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationFlags.SHCNF_DWORD">
            <summary>
            The dwItem1 and dwItem2 parameters are DWORD values.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationFlags.SHCNF_PATHW">
            <summary>
            like SHCNF_PATHA but unicode string
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationFlags.SHCNF_PRINTERW">
            <summary>
            like SHCNF_PRINTERA but unicode string
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationFlags.SHCNF_TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationFlags.SHCNF_FLUSH">
            <summary>
            The function should not return until the notification has been delivered to all affected components. As this flag modifies other data-type flags, it cannot by used by itself.
            </summary>
        </member>
        <member name="F:RMLib.Interop.ShellChangeNotificationFlags.SHCNF_FLUSHNOWAIT">
            <summary>
            The function should begin delivering notifications to all affected components but should return as soon as the notification process has begun. As this flag modifies other data-type flags, it cannot by used  by itself.
            </summary>
        </member>
        <member name="T:RMLib.Interop.InteropImports">
            <summary>
            Interop exports
            </summary>
        </member>
        <member name="T:RMLib.KeyedPool`2">
            <summary>
            Пул повторно используемых объектов с доступом по ключу
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.Activate(`0)">
            <summary>
            Aктивирует свободный элемент или создаёт и активирует новый элемент с укзанным ключом
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.Activate(`0,`1)">
            <summary>
            Активирует указанный элемент с указанным ключом
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.Deactivate(`0)">
            <summary>
            Деактивирует указанный элемент
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.DeactivateAll">
            <summary>
            Деактивирует все активные элементы
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.DeactivateCore(`0)">
            <summary>
            Деактивирует элемент c указанным индексом
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.Find(`0)">
            <summary>
            Поиск активного элемента по ключу. Если элемент не найден возвращает null
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.RemoveFree">
            <summary>
            Удаляет все свободные элементы
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.OnCreateItem">
            <summary>
            Создаёт и возвращает новый элемент
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.OnActivateItem(`1)">
            <summary>
            Вызывается перед активацией элемента
            </summary>
        </member>
        <member name="M:RMLib.KeyedPool`2.OnDeactivateItem(`1)">
            <summary>
            Вызывается перед деактивацией элемента
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpAction">
            <summary>
            Действие TCP-компонента
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpAction.Close">
            <summary>
            Закрыть соединение
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpAction.Send">
            <summary>
            Отправка данных
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpAction.Receive">
            <summary>
            Получить данные
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpAction.Connect">
            <summary>
            Установить соединение
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpClientAsync">
            <summary>
            TCP-клиент
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.OnConnected">
            <summary>
            Поднимает событие Connected
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.OnDisconnected">
            <summary>
            Поднимает событие Disconnected
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.OnBufferSent(RMLib.Network.TcpBuffer)">
            <summary>
            Поднимает событие BufferSent.
            Возвращает буфер для получения ответа или null, если ответа не ожидается
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.OnBufferReceived(RMLib.Network.TcpBuffer)">
            <summary>
            Поднимает событие BufferSent
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.Send(RMLib.Network.TcpBuffer)">
            <summary>
            Отправляет буфер данных
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.OnException(System.Exception)">
            <summary>
            Обработка исключения
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.RefreshSocket(System.Net.Sockets.Socket@,System.Boolean,System.Boolean)">
            <summary>
            Обновляет сокет.
            Если нет соединения, закрывает существующий и создаёт новый.
            Возвращает true, если был создан новый сокет, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.CloseSocket(System.Net.Sockets.Socket@,System.Boolean)">
            <summary>
            Закрывает сокет
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.CanShutdown(System.Net.Sockets.SocketShutdown@)">
            <summary>
            Определяет возможность завершения обмена данных сокетом
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.IsConnected(System.Net.Sockets.Socket)">
            <summary>
            Возвращает true, если сокет соединён, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.ConnectedCallback(System.IAsyncResult)">
            <summary>
            Установлено соединение с сервером
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.SendCallback(System.IAsyncResult)">
            <summary>
            Данные отправлены
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientAsync.ReceiveCallback(System.IAsyncResult)">
            <summary>
            Данные получены
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpClientAsync.RemoteAddress">
            <summary>
            Возвращает адрес соединения
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpClientAsync.Statistics">
            <summary>
            Возвращает статистику работы клиента
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpClientAsync.Connected">
            <summary>
            Соединение установлено
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpClientAsync.Disconnected">
            <summary>
            Соединение прервано
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpClientAsync.BufferSent">
            <summary>
            Буфер отправлен
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpClientAsync.BufferReceived">
            <summary>
            Буфер получен
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpClientAsync.IOState">
            <summary>
            Состояние операции чтения/записи данных
            </summary>
        </member>
        <member name="T:RMLib.Network.NetworkHelper">
            <summary>
            Методы для работы с сетью
            </summary>
        </member>
        <member name="M:RMLib.Network.NetworkHelper.TcpSend(System.Net.IPEndPoint,RMLib.Network.TcpBuffer)">
            <summary>
            Отправляет данные на TCP-сервер
            </summary>
        </member>
        <member name="M:RMLib.Network.NetworkHelper.TcpSend(System.Net.Sockets.TcpClient,System.Net.IPEndPoint,RMLib.Network.TcpBuffer)">
            <summary>
            Отправляет данные на TCP-сервер
            </summary>
        </member>
        <member name="M:RMLib.Network.NetworkHelper.TcpSendReceive(System.Net.Sockets.TcpClient,System.Net.IPEndPoint,RMLib.Network.TcpBuffer,RMLib.Network.TcpBuffer@)">
            <summary>
            Отправляет и получает данные с TCP-сервера
            </summary>
        </member>
        <member name="M:RMLib.Network.NetworkHelper.SafeGetAddress(System.String)">
            <summary>
            Возвращает адрес из строки
            </summary>
        </member>
        <member name="M:RMLib.Network.NetworkHelper.GetHostName(System.Uri)">
            <summary>
            Возвращает имя компьютера для указанного адреса
            </summary>
        </member>
        <member name="M:RMLib.Network.NetworkHelper.GetSocketException(System.Exception)">
            <summary>
            Возвращает исключение сокета из цепочки исключений
            </summary>
        </member>
        <member name="M:RMLib.Network.NetworkHelper.IsDisconnect(System.Net.Sockets.SocketException)">
            <summary>
            Возвращает true, если исключение указывает на завершение связи, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Network.NetworkHelper.GetErrorString(System.Net.Sockets.SocketException)">
            <summary>
            Возвращает строковое представление ошибки сокета
            </summary>
        </member>
        <member name="M:RMLib.Network.NetworkHelper.PingAverage(System.String,System.Int32,System.Int32)">
            <summary>
            Проверка связи для указанного адреса
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpBuffer">
            <summary>
            Буфер данных TCP
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpBuffer.DefaultSize">
            <summary>
            Размер буфера по умолчанию
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpBuffer.Size">
            <summary>
            Размер
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpBuffer.Buffer">
            <summary>
            Данные
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpBuffer.Offset">
            <summary>
            Смещение
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpBuffer.Completed">
            <summary>
            Признак заполнения буфера
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpBuffer.GetBuffer">
            <summary>
            Возвращает заполненный фрагмент буфера
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpBuffer.Parse">
            <summary>
            Разбирает буфер
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpClientObject">
            <summary>
            Базовый класс объекта TCP-клиента
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpClientObject.Address">
            <summary>
            Возвращает IP-адрес клиента
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpClientObject.Statistics">
            <summary>
            Возвращает статистику работы клиента
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpClientObject.Handler">
            <summary>
            Возвращает/устанавливает клиентский сокет
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpClientReusable">
            <summary>
            TCP-клиент
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.OnConnected">
            <summary>
            Поднимает событие Connected
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.OnDisconnected">
            <summary>
            Поднимает событие Disconnected
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.OnBufferSent(RMLib.Network.TcpBuffer)">
            <summary>
            Поднимает событие BufferSent.
            Возвращает буфер для получения ответа или null, если ответа не ожидается
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.OnBufferReceived(RMLib.Network.TcpBuffer)">
            <summary>
            Поднимает событие BufferSent
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.Send(RMLib.Network.TcpBuffer)">
            <summary>
            Отправляет буфер данных
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.OnDebug(System.String)">
            <summary>
            Обработка отладочного сообщения
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.OnException(System.Exception)">
            <summary>
            Обработка исключения
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.RefreshSocket(System.Boolean)">
            <summary>
            Обновляет сокет.
            Если нет соединения, закрывает подключение.
            Возвращает true, если нужно установить соединение, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.ShutdownSocket(System.Boolean)">
            <summary>
            Закрывает сокет
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.CanShutdown(System.Net.Sockets.SocketShutdown@)">
            <summary>
            Определяет возможность завершения обмена данных сокетом
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.IsConnected(System.Net.Sockets.Socket,System.Boolean@)">
            <summary>
            Возвращает true, если сокет соединён, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.ConnectedCallback(System.IAsyncResult)">
            <summary>
            Установлено соединение с сервером
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.SendCallback(System.IAsyncResult)">
            <summary>
            Данные отправлены
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpClientReusable.ReceiveCallback(System.IAsyncResult)">
            <summary>
            Данные получены
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpClientReusable.RemoteAddress">
            <summary>
            Возвращает адрес соединения
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpClientReusable.Statistics">
            <summary>
            Возвращает статистику работы клиента
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpClientReusable.Receiving">
            <summary>
            Возвращает true, если клиент ожидает получения данных, иначе false
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpClientReusable.Connected">
            <summary>
            Соединение установлено
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpClientReusable.Disconnected">
            <summary>
            Соединение прервано
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpClientReusable.BufferSent">
            <summary>
            Буфер отправлен
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpClientReusable.BufferReceived">
            <summary>
            Буфер получен
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpClientReusable.IOState">
            <summary>
            Состояние операции чтения/записи данных
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpException">
            <summary>
            Ошибка при операции с TCP-компонентом
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpException.Action">
            <summary>
            Возвращает действие при котором было получено исключение
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpServer">
            <summary>
            TCP-сервер
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.OnClientConnected(RMLib.Network.TcpClientObject)">
            <summary>
            Поднимает событие ClientConnected
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.OnClientDisconnected(RMLib.Network.TcpClientObject)">
            <summary>
            Поднимает событие ClientDisconnected
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.OnBufferReceived(RMLib.Network.TcpClientObject,RMLib.Network.TcpBuffer)">
            <summary>
            Поднимает событие BufferReceived.
            Возвращает действие сервера после получения данных
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.OnBufferSent(RMLib.Network.TcpClientObject,RMLib.Network.TcpBuffer)">
            <summary>
            Поднимает событие BufferSent.
            Возвращает действие сервера после отправки данных
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.Start(System.Int32)">
            <summary>
            Запуск сервера
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.Start(System.Int32,System.Int32)">
            <summary>
            Запуск сервера
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.Stop">
            <summary>
            Останов сервера
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.CreateClientObject(System.Net.IPAddress)">
            <summary>
            Запрос клиента на соединение.
            Возвращает объект клиента для установки соединения, или null для отклонения соединения
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.CreateReceiveBuffer(RMLib.Network.TcpClientObject)">
            <summary>
            Создание буфера для получения данных
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.CreateSendBuffer(RMLib.Network.TcpClientObject)">
            <summary>
            Создание буфера для отправки данных
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.OnDebug(System.String)">
            <summary>
            Обработка отладочного сообщения
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.OnException(System.Exception)">
            <summary>
            Обработка исключения
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.TrySend(RMLib.Network.TcpClientObject,RMLib.Network.TcpBuffer)">
            <summary>
            Отправить данные подключённому клиенту
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.CloseHandler(System.Net.Sockets.Socket@)">
            <summary>
            Закрывает и уничтожает клиентский сокет и удаляет клиента из списка
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.SafeShutdown(System.Net.Sockets.Socket)">
            <summary>
            Безопасно завершает передачу данных
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.SessionEnded(RMLib.Network.TcpClientObject)">
            <summary>
            Обновляет статистику по завершении сессии
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.ListenerThread(System.Object)">
            <summary>
            Поток прослушивания
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.AcceptCallback(System.IAsyncResult)">
            <summary>
            Обработка входящих соединений
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.ReceiveCallback(System.IAsyncResult)">
            <summary>
            Данные получены
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpServer.SendCallback(System.IAsyncResult)">
            <summary>
            Данные отправлены
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpServer.Statistics">
            <summary>
            Возвращает статистику работы сервера
            </summary>
        </member>
        <member name="P:RMLib.Network.TcpServer.Clients">
            <summary>
            Возвращает список клиентских объектов
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpServer.ClientConnected">
            <summary>
            Установлено соединение с клиентом
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpServer.ClientDisconnected">
            <summary>
            Прервано соединение с клиентом
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpServer.BufferReceived">
            <summary>
            Буфер получен
            </summary>
        </member>
        <member name="E:RMLib.Network.TcpServer.BufferSent">
            <summary>
            Буфер отправлен
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpServer.IOState">
            <summary>
            Состояние операции чтения/записи данных
            </summary>
        </member>
        <member name="T:RMLib.Network.TcpStatistics">
            <summary>
            Статистика работы TCP-компонента
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpStatistics.MessageSent">
            <summary>
            Количество отправленных сообщений
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpStatistics.MessageReceived">
            <summary>
            Количество принятых соощений
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpStatistics.BytesSent">
            <summary>
            Количество отправленных байт
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpStatistics.BytesReceived">
            <summary>
            Количество принятых байт
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpStatistics.Connections">
            <summary>
            Текущее количество соединений
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpStatistics.TotalConnections">
            <summary>
            Общее количество соединений
            </summary>
        </member>
        <member name="F:RMLib.Network.TcpStatistics.AverageSessionTime">
            <summary>
            Среднее время сессии
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpStatistics.SafeMessageReceived(System.Int64)">
            <summary>
            Учет полученного сообщения с проверкой на переполнение
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpStatistics.SafeMessageSent(System.Int64)">
            <summary>
            Учет отправленного сообщения с проверкой на переполнение
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpStatistics.Reset">
            <summary>
            Сброс счётчиков статистики
            </summary>
        </member>
        <member name="M:RMLib.Network.TcpStatistics.ToString">
            <summary>
            Возвращает строковое представление статистики работы TCP-компонента
            </summary>
        </member>
        <member name="T:RMLib.Network.SessionTimeCalculator">
            <summary>
            Расчитывает среднее время сессии
            </summary>
        </member>
        <member name="T:RMLib.OperationTimer">
            <summary>
            Класс для измерения продолжительности операции
            </summary>
        </member>
        <member name="P:RMLib.OperationTimer.Current">
            <summary>
            Возвращает текущие показания счётчика
            </summary>
        </member>
        <member name="T:RMLib.Pool`1">
            <summary>
            Пул повторно используемых объектов
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.Activate">
            <summary>
            Активирует свободный или создаёт и активирует новый элемент
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.Activate(`0)">
            <summary>
            Активирует указанный элемент
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.Deactivate(`0)">
            <summary>
            Деактивирует указанный элемент. Элемент может быть неактивным
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.DeactivateAll">
            <summary>
            Деактивирует все активные элементы
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.DeactivateCore(System.Int32)">
            <summary>
            Деактивирует элемент c указанным индексом
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.RemoveFree">
            <summary>
            Удаляет все свободные элементы
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.OnCreateItem">
            <summary>
            Создаёт и возвращает новый элемент
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.OnActivateItem(`0)">
            <summary>
            Вызывается перед активацией элемента
            </summary>
        </member>
        <member name="M:RMLib.Pool`1.OnDeactivateItem(`0)">
            <summary>
            Вызывается перед деактивацией элемента
            </summary>
        </member>
        <member name="T:RMLib.RangeParseOptions">
            <summary>
            Условия разбора строки диапазонов
            </summary>
        </member>
        <member name="F:RMLib.RangeParseOptions.None">
            <summary>
            Все значения, кроме нуля
            </summary>
        </member>
        <member name="F:RMLib.RangeParseOptions.AllowZero">
            <summary>
            Разрешает нулевые значения
            </summary>
        </member>
        <member name="T:RMLib.RangeSet">
            <summary>
            Методы для работы с набором диапазонов положительных чисел.
            Набор диапазонов представляется в виде строки, например "1-5, 17, 44-80"
            </summary>
        </member>
        <member name="M:RMLib.RangeSet.FromList(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Возвращает набор диапазонов из списка
            </summary>
        </member>
        <member name="M:RMLib.RangeSet.FromArray(System.Int32[])">
            <summary>
            Возвращает набор диапазонов из массива
            </summary>
        </member>
        <member name="M:RMLib.RangeSet.Parse(System.String,System.Collections.Generic.IList{System.Int32}@)">
            <summary>
            Разбарает набор диапазонов на отдельные значения
            </summary>
        </member>
        <member name="M:RMLib.RangeSet.Parse(System.String,System.Collections.Generic.IList{System.Int32}@,RMLib.RangeParseOptions)">
            <summary>
            Разбарает набор диапазонов на отдельные значения
            </summary>
        </member>
        <member name="M:RMLib.RangeSet.Parse(System.String,System.Collections.Generic.IList{RMLib.IntRange}@)">
            <summary>
            Разбарает набор диапазонов на отдельные диапазоны
            </summary>
        </member>
        <member name="M:RMLib.RangeSet.Parse(System.String,System.Collections.Generic.IList{RMLib.IntRange}@,RMLib.RangeParseOptions)">
            <summary>
            Разбарает набор диапазонов на отдельные диапазоны
            </summary>
        </member>
        <member name="M:RMLib.RangeSet.Contains(System.String,System.String)">
            <summary>
            Возвращает true, если один набор диапазонов содержит второй
            </summary>
        </member>
        <member name="T:RMLib.Files.PerceivedTypes">
            <summary>
            Типы форматов файлов понимаемые операционной системой
            </summary>
        </member>
        <member name="F:RMLib.Files.PerceivedTypes.None">
            <summary>
            Без типа
            </summary>
        </member>
        <member name="F:RMLib.Files.PerceivedTypes.Image">
            <summary>
            Изображение
            </summary>
        </member>
        <member name="F:RMLib.Files.PerceivedTypes.Text">
            <summary>
            Текст
            </summary>
        </member>
        <member name="F:RMLib.Files.PerceivedTypes.Audio">
            <summary>
            Звук
            </summary>
        </member>
        <member name="F:RMLib.Files.PerceivedTypes.Video">
            <summary>
            Видео
            </summary>
        </member>
        <member name="F:RMLib.Files.PerceivedTypes.Compressed">
            <summary>
            Сжатый
            </summary>
        </member>
        <member name="F:RMLib.Files.PerceivedTypes.System">
            <summary>
            Системный
            </summary>
        </member>
        <member name="T:RMLib.Files.FileAssociationInfo">
            <summary>
            Представляет ассоциацию расширения файла в реестре
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationInfo.Create(System.String,System.String)">
            <summary>
            Создаёт ассоциацию с указанными параметрами
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationInfo.Create(System.String,System.String,RMLib.Files.PerceivedTypes)">
            <summary>
            Создаёт ассоциацию с указанными параметрами
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationInfo.Create(System.String,System.String,RMLib.Files.PerceivedTypes,System.String)">
            <summary>
            Создаёт ассоциацию с указанными параметрами
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationInfo.Create(System.String,System.String,RMLib.Files.PerceivedTypes,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Создаёт ассоциацию с указанными параметрами
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationInfo.GetExtensions">
            <summary>
            Возвращает список всех ассоциированных расширений
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationInfo.Create">
            <summary>
            Создаёт ассоциацию
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationInfo.Delete">
            <summary>
            Удаляет ассоциацию
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationInfo.IsValid(System.String,System.String)">
            <summary>
            Возвращает true, если расширение зарегистрировано и ассоциировано с указанным программным идертификатором
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationInfo.ThrowIfNotExists">
            <summary>
            Выбрасывает исключение, если ассоциация не существует
            </summary>
        </member>
        <member name="P:RMLib.Files.FileAssociationInfo.Extension">
            <summary>
            Возвращает расширение
            </summary>
        </member>
        <member name="P:RMLib.Files.FileAssociationInfo.Exists">
            <summary>
            Возвращает true, если ассоциация существует, иначе false
            </summary>
        </member>
        <member name="P:RMLib.Files.FileAssociationInfo.ContentType">
            <summary>
            Возвращает/устанавливает MIME-тип файлов
            </summary>
        </member>
        <member name="P:RMLib.Files.FileAssociationInfo.PerceivedType">
            <summary>
            Возвращает/устанавливает <see cref="P:RMLib.Files.FileAssociationInfo.PerceivedType"/> файлов
            </summary>
        </member>
        <member name="P:RMLib.Files.FileAssociationInfo.PersistentHandler">
            <summary>
            Возвращает/устанавливает идентификатор компонента, используемого для поиска в файлах
            </summary>
        </member>
        <member name="P:RMLib.Files.FileAssociationInfo.ProgID">
            <summary>
            Возвращает/устанавливает имя ассоциированного приложения
            </summary>
        </member>
        <member name="P:RMLib.Files.FileAssociationInfo.OpenWithList">
            <summary>
            ассоциированного имена программ, которые отображаются в списке "Открыть с помощью"
            </summary>
        </member>
        <member name="T:RMLib.Files.FileAssociationHelper">
            <summary>
            Методы для работы с реестром
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationHelper.IsAssociated(System.String,System.String)">
            <summary>
            Возвращает true, если расширение ассоциировано с программным идентификатором, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationHelper.Associate(System.String,System.String,System.String)">
            <summary>
            Ассоциирует исполняемый файл с расширением
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationHelper.Associate(System.String,System.String,System.String,RMLib.Files.ProgramAssociationInfo@)">
            <summary>
            Ассоциирует исполняемый файл с расширением
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationHelper.Associate(System.String,System.String)">
            <summary>
            Ассоциирует расширение с существующим программным идентификатором
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationHelper.Read(System.String,System.String)">
            <summary>
            Читеат значение из реестра
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationHelper.Write(System.String,System.String,System.Object)">
            <summary>
            Записывает значение в реестр
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationHelper.Delete(System.String,System.String)">
            <summary>
            Удаляет значение из реестра
            </summary>
        </member>
        <member name="M:RMLib.Files.FileAssociationHelper.NotifyOfChange">
            <summary>
            Уведомляет оболочку операционной системы об изменении файловых ассоциаций
            </summary>
        </member>
        <member name="T:RMLib.Files.ShellBehaviorFlags">
            <summary>
            Флаги поведения оболочки операционной системы при обработке типов файлов,
            связанных с программным идентификатором
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.None">
            <summary>
            No flags exist
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.Exclude">
            <summary>
            Exclude the file class
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.Show">
            <summary>
            Show file classes, such as folders, that aren't associated with a file name extension
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.HasExtension">
            <summary>
            The file class has a file name extension
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoEdit">
            <summary>
            The registry entries associated with this file class cannot be edited. New entries cannot be added and existing entries cannot be modified or deleted
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoRemove">
            <summary>
            The registry entries associated with this file class cannot be deleted
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoNewVerb">
            <summary>
            No new verbs can be added to the file class
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoEditVerb">
            <summary>
            Canonical verbs such as open and print cannot be modified or deleted
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoRemoveVerb">
            <summary>
            Canonical verbs such as open and print cannot be deleted
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoEditDesc">
            <summary>
            The description of the file class cannot be modified or deleted
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoEditIcon">
            <summary>
            The icon assigned to the file class cannot be modified or deleted
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoEditDflt">
            <summary>
            The default verb cannot be modified
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoEditVerbCmd">
            <summary>
            The commands associated with verbs cannot be modified
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoEditVerbExe">
            <summary>
            Verbs cannot be modified or deleted
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoDDE">
            <summary>
            The Dynamic Data Exchange (DDE)-related entries cannot be modified or deleted
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoEditMIME">
            <summary>
            The content-type and default-extension entries cannot be modified or deleted
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.OpenIsSafe">
            <summary>
            The file class's open verb can be safely invoked for downloaded files. Note that this flag may create a security risk, because downloaded files could contain malicious content. To reduce this risk, consider methods to scan downloaded files before opening
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.AlwaysUnsafe">
            <summary>
            Do not allow the Never ask me check box to be enabled. The user can override this attribute through the File Type dialog box. This flag also affects ShellExecute, download dialogs, and any application making use of the AssocIsDangerous function
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.AlwaysShowExtension">
            <summary>
            Always show the file class's file name extension, even if the user has selected the Hide Extensions option
            </summary>
        </member>
        <member name="F:RMLib.Files.ShellBehaviorFlags.NoRecentDocuments">
            <summary>
            Don't add members of this file class to the Recent Documents folder
            </summary>
        </member>
        <member name="T:RMLib.Files.ProgramAssociationInfo">
            <summary>
            Представляет программный идентификатор в реестре, на который могут ссылаться ассоциации расширений
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.Create(System.String,RMLib.Files.ProgramVerb)">
            <summary>
            Создаёт программный идентификатор с указанными параметрами
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.Create(System.String,System.Collections.Generic.IEnumerable{RMLib.Files.ProgramVerb})">
            <summary>
            Создаёт программный идентификатор с указанными параметрами
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.Create(System.String,System.String,RMLib.Files.ProgramVerb)">
            <summary>
            Создаёт программный идентификатор с указанными параметрами
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.Create(System.String,System.String,System.Collections.Generic.IEnumerable{RMLib.Files.ProgramVerb})">
            <summary>
            Создаёт программный идентификатор с указанными параметрами
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.Create(System.String,System.String,RMLib.Files.ShellBehaviorFlags,RMLib.Files.ProgramVerb)">
            <summary>
            Создаёт программный идентификатор с указанными параметрами
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.Create(System.String,System.String,RMLib.Files.ShellBehaviorFlags,System.Collections.Generic.IEnumerable{RMLib.Files.ProgramVerb})">
            <summary>
            Создаёт программный идентификатор с указанными параметрами
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.Create">
            <summary>
            Создаёт программный идентификатор
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.Delete">
            <summary>
            Удаляет программный идентификатор
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.AddVerb(RMLib.Files.ProgramVerb)">
            <summary>
            Добавляет команду, поддерживаемую программным идентификатором
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.RemoveVerb(RMLib.Files.ProgramVerb)">
            <summary>
            Удаляет команду, поддерживаемую программным идентификатором
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.RemoveVerb(System.String)">
            <summary>
            Удаляет команду, поддерживаемую программным идентификатором
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.TryGetInt(System.Byte[],System.Int32@)">
            <summary>
            Преобразует значение, хранящееся в байтовом массиве в число
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramAssociationInfo.ThrowIfNotExists">
            <summary>
            Выбрасывает исключение, если программный идентификатор не существует
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramAssociationInfo.ProgID">
            <summary>
            Возвращает программный идентификатор
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramAssociationInfo.Exists">
            <summary>
            Возвращает true, если программный идентификатор существует, иначе false
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramAssociationInfo.Description">
            <summary>
            Возвращает/устанавливает описание файлов
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramAssociationInfo.AlwaysShowExtension">
            <summary>
            Возвращает/устанавливает видимость расширения
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramAssociationInfo.ShellBehavior">
            <summary>
            Возвращает/устанавливает флаги поведения оболочки операционной системы
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramAssociationInfo.DefaultIcon">
            <summary>
            Возвращает/устанавливает значок для файлов по умолчанию
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramAssociationInfo.Verbs">
            <summary>
            Возвращает/устанавливает список команд, поддерживаемых программным идентификатором
            </summary>
        </member>
        <member name="T:RMLib.Files.ProgramIcon">
            <summary>
            Значок программы
            </summary>
        </member>
        <member name="F:RMLib.Files.ProgramIcon.Empty">
            <summary>
            Пустой или несуществующий значок
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramIcon.Parse(System.String)">
            <summary>
            Возвращает значок из строки
            </summary>
        </member>
        <member name="M:RMLib.Files.ProgramIcon.ToString">
            <summary>
            Возвращает строковое представление значка программы
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramIcon.Index">
            <summary>
            Gets or sets value that specifies icons index within a file
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramIcon.Path">
            <summary>
            Gets or sets a value that specifies the file containing the icon
            </summary>
        </member>
        <member name="T:RMLib.Files.ProgramVerb">
            <summary>
            Команда, определяющая режим открытия файла
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramVerb.Name">
            <summary>
            Возвращает имя команды
            </summary>
        </member>
        <member name="P:RMLib.Files.ProgramVerb.Command">
            <summary>
            Возвращает командную строку, которая выполняется при использовании команды
            </summary>
        </member>
        <member name="T:RMLib.EnumOptions">
            <summary>
            Опции для работы с перечислениями
            </summary>
        </member>
        <member name="F:RMLib.EnumOptions.Default">
            <summary>
            Не обрабатываются элементы перечисления со значением равным нулю и повторяющиеся элементы
            </summary>
        </member>
        <member name="F:RMLib.EnumOptions.AllowZeroValues">
            <summary>
            Обрабатывать элементы перечисления со значением равным нулю
            </summary>
        </member>
        <member name="F:RMLib.EnumOptions.AllowDuplicates">
            <summary>
            Обрабатывать повторяющиеся элементы перечисления
            </summary>
        </member>
        <member name="F:RMLib.EnumOptions.AllowFlagsCombination">
            <summary>
            Обрабатывать элементы перечисления, являющиеся комбинациями флагов
            </summary>
        </member>
        <member name="T:RMLib.ArrayEqualityComparer`1">
            <summary>
            Сравнение массивов по значению
            </summary>
        </member>
        <member name="T:RMLib.RuntimeHelper">
            <summary>
            Вспомогательные методы
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.InvokeConstructor(System.Type)">
            <summary>
            Создаёт объект указанного типа с помощью конструктора по умолчанию
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.FindTypes``1(System.Reflection.Assembly)">
            <summary>
            Находит типы в сборке, совместимые с указанным типом
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.FindTypes``1(System.Reflection.Assembly,System.Boolean,System.Boolean)">
            <summary>
            Находит типы в сборке, совместимые с указанным типом
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.GetExecutingMethod">
            <summary>
            Возвращает информацию о вызывающем методе
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.GetExecutingMethod(System.Int32)">
            <summary>
            Возвращает информацию о вызывающем методе
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.GetMethodName(System.Delegate)">
            <summary>
            Возвращает имя типа, в котором определён метод, представленный делегатом
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.IsManagedAssembly(System.String)">
            <summary>
            Возвращает true, если файл является управляемой сборкой, иначе false
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.GetEnumElements``1">
            <summary>
            Возвращает неповторяющиеся элементы перечисления, включая элементы с нулевым значением
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.GetEnumElements``1(RMLib.EnumOptions)">
            <summary>
            Возвращает элементы перечисления
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.GetRandomValue``1">
            <summary>
            Возвращает элемент перечисления, выбранный псевдослучайным образом
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.ToEnum``1(System.Object,``0@)">
            <summary>
            Преобразует целое число (Int32) или строку в перечисляемый тип
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.ToEnumerable``1(``0)">
            <summary>
            Возвращает перечислитель для одного элемента
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.GetString(System.Enum)">
            <summary>
            Возвращает строковое представление элемента перечисления
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.GetGenericString(System.Enum,System.String,System.Int32)">
            <summary>
            Возвращает строковое представление элемента перечисления по указанному шаблону
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.TryParse``1(System.String,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>
            Восстанавливает коллекцию из строки, содержащей значения, разделённые запятой
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.TryParse``1(System.String,System.Char,System.Collections.Generic.IEnumerable{``0}@)">
            <summary>
            Восстанавливает коллекцию из строки, содержащей значения, разделённые указанным символом
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.Serialize``1(``0)">
            <summary>
            Сериализует элемент данных в строку
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.Serialize``1(``0,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Сериализует элемент данных в строку
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.Serialize(System.Object)">
            <summary>
            Сериализует элемент данных в строку
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.Serialize(System.Object,System.Type)">
            <summary>
            Сериализует элемент данных в строку
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.Serialize(System.Object,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Сериализует элемент данных в строку
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.Deserialize``1(System.String)">
            <summary>
            Десериализует элемент данных из строки
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.Deserialize``1(System.String,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Десериализует элемент данных из строки
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.Deserialize(System.String,System.Type)">
            <summary>
            Десериализует элемент данных из строки
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.Deserialize(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Десериализует элемент данных из строки
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.IsSerialized(System.String)">
            <summary>
            Возвращает true, если строка содержит сериализованное значение, иначе false
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.IsEqual(System.Byte[],System.Byte[])">
            <summary>
            Сравнивает элементы указанных массивов
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.IsEqual(System.Byte[],System.Byte[],System.Int32@)">
            <summary>
            Сравнивает элементы указанных массивов
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.IsEqual(System.Int32[],System.Int32[])">
            <summary>
            Сравнивает элементы указанных массивов
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.IsEqual(System.Int32[],System.Int32[],System.Int32@)">
            <summary>
            Сравнивает элементы указанных массивов
            </summary>
        </member>
        <member name="M:RMLib.RuntimeHelper.GetIndexFromOrder(System.Int32,System.Int32,System.Predicate{System.Int32})">
            <summary>
            Возвращает индекс по порядковому номеру
            </summary>
        </member>
        <member name="T:RMLib.Safe">
            <summary>
            Методы выполняемые с проверкой допустимых значений (безопасные)
            </summary>
        </member>
        <member name="M:RMLib.Safe.ToInt32(System.Int64)">
            <summary>
            Безопасное преобразование long в int
            </summary>
        </member>
        <member name="M:RMLib.Safe.ToInt32(System.Double)">
            <summary>
            Безопасное преобразование double в int
            </summary>
        </member>
        <member name="M:RMLib.Safe.ToInt32(System.Decimal)">
            <summary>
            Безопасное преобразование decimal в int
            </summary>
        </member>
        <member name="M:RMLib.Safe.GetLength(System.String)">
            <summary>
            Возвращает длину строки. Строка может быть равна null
            </summary>
        </member>
        <member name="M:RMLib.Safe.GetCount(System.Collections.IEnumerable)">
            <summary>
            Возвращает количество элементов коллекции. Аргумент может быть равен null
            </summary>
        </member>
        <member name="M:RMLib.Safe.GetString(System.Uri)">
            <summary>
            Возвращает строковое представление адреса. Аргумент может быть равен null
            </summary>
        </member>
        <member name="M:RMLib.Safe.Ensure(System.Text.StringBuilder,System.Int32)">
            <summary>
            Создаёт объект StringBuilder или возвращает существующий, сбросив его длину, и проверяет его вместимость
            </summary>
        </member>
        <member name="M:RMLib.Safe.Add(System.Int64,System.Int64)">
            <summary>
            Прибавляет значение к числу. В случае переполнения возвращает Int64.MaxValue или Int64.MinValue
            </summary>
        </member>
        <member name="M:RMLib.Safe.Add(System.Double,System.Double)">
            <summary>
            Прибавляет значение к числу. В случае переполнения возвращает Double.MaxValue или Double.MinValue
            </summary>
        </member>
        <member name="M:RMLib.Safe.Add(System.DateTime,System.TimeSpan)">
            <summary>
            Прибавляет значение к дате. В случае переполнения возвращает DateTime.MaxValue или DateTime.MinValue
            </summary>
        </member>
        <member name="M:RMLib.Safe.Add(System.TimeSpan,System.TimeSpan)">
            <summary>
            Прибавляет значение к интервалу. В случае переполнения возвращает TimeSpan.MaxValue или TimeSpan.MinValue
            </summary>
        </member>
        <member name="T:RMLib.Services.IServiceContainer">
            <summary>
            Интерфейс контейнера сервисов
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterType``2">
            <summary>
            Регистрирует сервис типа TInterface с реализацией в типе TImpl. 
            Способ создания объектов - новый экземпляр на каждый вызов
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterType``2(System.String)">
            <summary>
            Регистрирует сервис типа TInterface с реализацией в типе TImpl и с именем name.
            Способ создания объектов - новый экземпляр на каждый вызов
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterType(System.Type,System.Type)">
            <summary>
            Регистрирует сервис типа interfaceType с реализацией в типе implementationType. 
            Способ создания объектов - новый экземпляр на каждый вызов
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterType(System.Type,System.Type,System.String)">
            <summary>
            Регистрирует сервис типа interfaceType с реализацией в типе implementationType и с именем name.
            Способ создания объектов - новый экземпляр на каждый вызов
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterInstance``1(``0)">
            <summary>
            Регистрирует сервис типа TInterface для существующего объекта. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterInstance``1(``0,System.String)">
            <summary>
            Регистрирует сервис типа TInterface для существующего объекта с именем name.
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterInstance(System.Type,System.Object)">
            <summary>
            Регистрирует сервис типа interfaceType для существующего объекта. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterInstance(System.Type,System.Object,System.String)">
            <summary>
            Регистрирует сервис типа interfaceType для существующего объекта с именем name.
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterLazyInstance``2">
            <summary>
            Регистрирует сервис типа TInterface с реализацией в типе TImpl. 
            Объект типа TImpl создаётся автоматически по первому требованию 
            на основе зависимостей или конструктора по умолчанию. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterLazyInstance``2(System.String)">
            <summary>
            Регистрирует сервис типа TInterface с именем name и реализацией в типе TImpl. 
            Объект типа TImpl создаётся автоматически по первому требованию 
            на основе зависимостей или конструктора по умолчанию. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterLazyInstance(System.Type,System.Type)">
            <summary>
            Регистрирует сервис типа interfaceType с реализацией в типе implementationType. 
            Объект типа implementationType создаётся автоматически по первому требованию 
            на основе зависимостей или конструктора по умолчанию. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterLazyInstance(System.Type,System.Type,System.String)">
            <summary>
            Регистрирует сервис типа interfaceType с именем name и реализацией в типе implementationType. 
            Объект типа implementationType создаётся автоматически по первому требованию 
            на основе зависимостей или конструктора по умолчанию. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterFactory``1(RMLib.Services.IServiceFactory)">
            <summary>
            Регистрирует сервис типа TInterface для указанной фабрики. 
            Способ создания объектов определяется фабрикой
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterFactory``1(RMLib.Services.IServiceFactory,System.String)">
            <summary>
            Регистрирует сервис типа TInterface с именем name для указанной фабрики. 
            Способ создания объектов определяется фабрикой
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterFactory(System.Type,RMLib.Services.IServiceFactory)">
            <summary>
            Регистрирует сервис типа interfaceType для указанной фабрики. 
            Способ создания объектов определяется фабрикой
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.RegisterFactory(System.Type,RMLib.Services.IServiceFactory,System.String)">
            <summary>
            Регистрирует сервис типа interfaceType с именем name для указанной фабрики. 
            Способ создания объектов определяется фабрикой
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.Rebuild``1(``0)">
            <summary>
            Обновляет зависимости для указанного объекта
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.Rebuild``1">
            <summary>
            Обновляет зависимости для сервисов, зарегистрированных на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.Rebuild(System.Type)">
            <summary>
            Обновляет зависимости для сервисов, зарегистрированных на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.Rebuild">
            <summary>
            Обновляет зависимости для всех зарегистрированных сервисов
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.GetService``1">
            <summary>
            Возвращает объект сервиса, зарегистрированного на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.GetService``1(System.String)">
            <summary>
            Возвращает именованный объект сервиса, зарегистрированного на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.GetService(System.Type,System.String)">
            <summary>
            Возвращает именованный объект сервиса, зарегистрированного на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.GetAllServices``1">
            <summary>
            Возвращает все объекты сервисов, зарегистрированных на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.GetAllServices(System.Type)">
            <summary>
            Возвращает все объекты сервисов, зарегистрированных на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.GetAnyServices``1">
            <summary>
            Возвращает объекты сервисов, зарегистрированных на типы, реализующие указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.GetAnyServices(System.Type)">
            <summary>
            Возвращает объекты сервисов, зарегистрированных на типы, реализующие указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceContainer.CreateChildContainer">
            <summary>
            Создаёт дочерний контейнер
            </summary>
        </member>
        <member name="T:RMLib.Services.ServiceContainer">
            <summary>
            Контейнер сервисов
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterType``2">
            <summary>
            Регистрирует сервис типа TInterface с реализацией в типе TImpl. 
            Способ создания объектов - новый экземпляр на каждый вызов
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterType``2(System.String)">
            <summary>
            Регистрирует сервис типа TInterface с реализацией в типе TImpl и с именем name.
            Способ создания объектов - новый экземпляр на каждый вызов
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterType(System.Type,System.Type)">
            <summary>
            Регистрирует сервис типа interfaceType с реализацией в типе implementationType. 
            Способ создания объектов - новый экземпляр на каждый вызов
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterType(System.Type,System.Type,System.String)">
            <summary>
            Регистрирует сервис типа interfaceType с реализацией в типе implementationType и с именем name.
            Способ создания объектов - новый экземпляр на каждый вызов
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterInstance``1(``0)">
            <summary>
            Регистрирует сервис типа <typeparam name="TInterface"/> для существующего объекта. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterInstance``1(``0,System.String)">
            <summary>
            Регистрирует сервис типа TInterface для существующего объекта с именем name.
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterInstance(System.Type,System.Object)">
            <summary>
            Регистрирует сервис типа interfaceType для существующего объекта. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterInstance(System.Type,System.Object,System.String)">
            <summary>
            Регистрирует сервис типа interfaceType для существующего объекта с именем name.
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterInstance(System.Type,System.Object,System.String,RMLib.Services.ServiceFactoryOptions)">
            <summary>
            Регистрирует сервис типа interfaceType для существующего объекта с именем name.
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterLazyInstance``2">
            <summary>
            Регистрирует сервис типа TInterface с реализацией в типе TImpl. 
            Объект типа TImpl создаётся автоматически по первому требованию ("ленивый") 
            на основе зависимостей или конструктора по умолчанию. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterLazyInstance``2(System.String)">
            <summary>
            Регистрирует сервис типа TInterface с именем name и реализацией в типе TImpl. 
            Объект типа TImpl создаётся автоматически по первому требованию 
            на основе зависимостей или конструктора по умолчанию. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterLazyInstance(System.Type,System.Type)">
            <summary>
            Регистрирует сервис типа interfaceType с реализацией в типе implementationType. 
            Объект типа implementationType создаётся автоматически по первому требованию 
            на основе зависимостей или конструктора по умолчанию. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterLazyInstance(System.Type,System.Type,System.String)">
            <summary>
            Регистрирует сервис типа interfaceType с именем name и реализацией в типе implementationType. 
            Объект типа implementationType создаётся автоматически по первому требованию 
            на основе зависимостей или конструктора по умолчанию. 
            Способ создания объектов - синглтон
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterFactory``1(RMLib.Services.IServiceFactory)">
            <summary>
            Регистрирует сервис типа TInterface для указанной фабрики. 
            Способ создания объектов определяется фабрикой
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterFactory``1(RMLib.Services.IServiceFactory,System.String)">
            <summary>
            Регистрирует сервис типа TInterface с именем name для указанной фабрики. 
            Способ создания объектов определяется фабрикой
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterFactory(System.Type,RMLib.Services.IServiceFactory)">
            <summary>
            Регистрирует сервис типа interfaceType для указанной фабрики. 
            Способ создания объектов определяется фабрикой
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.RegisterFactory(System.Type,RMLib.Services.IServiceFactory,System.String)">
            <summary>
            Регистрирует сервис типа interfaceType с именем name для указанной фабрики. 
            Способ создания объектов определяется фабрикой
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.Rebuild``1(``0)">
            <summary>
            Обновляет зависимости для указанного объекта
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.Rebuild``1">
            <summary>
            Обновляет зависимости для сервисов, зарегистрированных на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.Rebuild(System.Type)">
            <summary>
            Обновляет зависимости для сервисов, зарегистрированных на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.Rebuild">
            <summary>
            Обновляет зависимости для всех зарегистрированных сервисов
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.GetService``1">
            <summary>
            Возвращает объект сервиса, зарегистрированного на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.GetService``1(System.String)">
            <summary>
            Возвращает именованный объект сервиса, зарегистрированного на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.GetService(System.Type,System.String)">
            <summary>
            Возвращает именованный объект сервиса, зарегистрированного на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.GetAllServices``1">
            <summary>
            Возвращает все объекты сервисов, зарегистрированных на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.GetAllServices(System.Type)">
            <summary>
            Возвращает все объекты сервисов, зарегистрированных на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.GetAnyServices``1">
            <summary>
            Возвращает объекты сервисов, зарегистрированных на типы, реализующие указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.GetAnyServices(System.Type)">
            <summary>
            Возвращает объекты сервисов, зарегистрированных на типы, реализующие указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.CreateChildContainer">
            <summary>
            Создаёт дочерний контейнер
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.GetService(System.Type)">
            <summary>
            Возвращает объект сервиса, зарегистрированного на указанный тип
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceContainer.ThrowIfIncompatibleTypes(System.Type,System.Type)">
            <summary>
            Выбрасывает исключение, если типы несовместимы
            </summary>
        </member>
        <member name="T:RMLib.Services.AutoRegisterContainer">
            <summary>
            Контейнер сервисов. Находит и регистрирует сервисы помеченные атрибутом ServiceAttribute
            </summary>
        </member>
        <member name="T:RMLib.Services.InjectionException">
            <summary>
            Ошибка при инъектировании
            </summary>
        </member>
        <member name="P:RMLib.Services.InjectionException.DependencyType">
            <summary>
            Возвращает тип зависимости
            </summary>
        </member>
        <member name="T:RMLib.Services.DependencyResolveException">
            <summary>
            Ошибка при разрешении зависимостей
            </summary>
        </member>
        <member name="T:RMLib.Services.AutoRegisterException">
            <summary>
            Ошибка при автоматической регистрации типов
            </summary>
        </member>
        <member name="T:RMLib.Services.IServiceFactory">
            <summary>
            Интерфейс фабрики сервисов
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceFactory.CreateService">
            <summary>
            Создаёт сервис
            </summary>
        </member>
        <member name="M:RMLib.Services.IServiceFactory.RebuildService">
            <summary>
            Обновляет зависимости
            </summary>
        </member>
        <member name="T:RMLib.Services.ServiceFactoryOptions">
            <summary>
            Опции фабрики сервисов
            </summary>
        </member>
        <member name="F:RMLib.Services.ServiceFactoryOptions.None">
            <summary>
            Не указаны
            </summary>
        </member>
        <member name="F:RMLib.Services.ServiceFactoryOptions.NoDispose">
            <summary>
            Не уничтожать экземпляр
            </summary>
        </member>
        <member name="T:RMLib.Services.ServiceFactory">
            <summary>
            Фабрика сервисов
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceFactory.CreateService">
            <summary>
            Создаёт сервис
            </summary>
        </member>
        <member name="M:RMLib.Services.ServiceFactory.RebuildService">
            <summary>
            Обновляет зависимости
            </summary>
        </member>
        <member name="T:RMLib.Services.SingletonServiceFactory">
            <summary>
            Фабрика синглтон-сервисов. Возвращает уникальный объект (синглтон)
            </summary>
        </member>
        <member name="T:RMLib.Services.LazySingletonServiceFactory">
            <summary>
            Фабрика "ленивых" синглтон-сервисов. Возвращает уникальный объект (синглтон). 
            Синглтон создаётся автоматически по требованию
            </summary>
        </member>
        <member name="T:RMLib.Services.InstanceServiceFactory">
            <summary>
            Фабрика экземпляров сервисов. Возвращает новый экземпляр на каждый вызов
            </summary>
        </member>
        <member name="T:RMLib.Services.WeakInstanceServiceFactory">
            <summary>
            Фабрика экземпляров сервисов. Возвращает последний созданный экземпляр,
            если он не уничтожен сборщиком мусора, иначе создаёт новый
            </summary>
        </member>
        <member name="T:RMLib.Services.ThreadServiceFactory">
            <summary>
            Фабрика экземпляров сервисов. Создаёт новый экземпляр для каждого вызывающего потока
            </summary>
        </member>
        <member name="T:RMLib.Services.TypeNameKey">
            <summary>
            Ключ тип/имя
            </summary>
        </member>
        <member name="T:RMLib.Services.InjectionHelper">
            <summary>
            Методы для работы с инъектированием
            </summary>
        </member>
        <member name="M:RMLib.Services.InjectionHelper.GetInjectionConstructor(System.Type)">
            <summary>
            Возвращает конструктор, инъектирующий зависимости
            </summary>
        </member>
        <member name="M:RMLib.Services.InjectionHelper.GetInjectionMethod(System.Type)">
            <summary>
            Возвращает метод, инъектирующий зависимости
            </summary>
        </member>
        <member name="M:RMLib.Services.InjectionHelper.GetInjectionProperties(System.Type)">
            <summary>
            Возвращает свойства, инъектирующие зависимости
            </summary>
        </member>
        <member name="M:RMLib.Services.InjectionHelper.GetInjectionParameters(System.Reflection.MethodBase)">
            <summary>
            Возвращает массив параметров метода, инъектирующего зависимости
            </summary>
        </member>
        <member name="M:RMLib.Services.InjectionHelper.ResolveDependencies(RMLib.Services.IServiceContainer,System.Collections.Generic.List{RMLib.Services.InjectionParameter})">
            <summary>
            Разрешает, создаёт и возвращает массив зависимостей
            </summary>
        </member>
        <member name="T:RMLib.Services.InjectionConstructorAttribute">
            <summary>
            Указывает что конструктор является инъектором зависимостей
            </summary>
        </member>
        <member name="T:RMLib.Services.InjectionMethodAttribute">
            <summary>
            Указывает что метод является инъектором зависимостей
            </summary>
        </member>
        <member name="T:RMLib.Services.InjectionPropertyAttribute">
            <summary>
            Указывает что свойство является инъектором зависимостей
            </summary>
        </member>
        <member name="T:RMLib.Services.InjectionParameterAttribute">
            <summary>
            Указывает что параметр является инъектируемой зависимостью
            </summary>
        </member>
        <member name="P:RMLib.Services.InjectionParameterAttribute.Required">
            <summary>
            Возвращает/устанавливает требование разрешения зависимости.
            Если true, зависимость должна быть разрешена.
            Если false, зависимость может быть не разрешенной (т.е. будет равна null)
            </summary>
        </member>
        <member name="P:RMLib.Services.InjectionParameterAttribute.Name">
            <summary>
            Возвращает/устанавливает имя параметра
            </summary>
        </member>
        <member name="P:RMLib.Services.InjectionParameterAttribute.ExactBinding">
            <summary>
            Возвращает/устанавливает соответствие типа зависимости типу свойства.
            Если true, если тип зависимости должен быть такой же как тип свойства.
            Если false, тип зависимости может быть любым совместимым с типом свойства
            (например, наследованным, или поддерживающим интерфейс)
            </summary>
        </member>
        <member name="T:RMLib.Services.ActivationType">
            <summary>
            Способ создания сервиса
            </summary>
        </member>
        <member name="F:RMLib.Services.ActivationType.Singleton">
            <summary>
            Синглтон
            </summary>
        </member>
        <member name="F:RMLib.Services.ActivationType.Instance">
            <summary>
            Экземпляр
            </summary>
        </member>
        <member name="T:RMLib.Services.InjectionServiceAttribute">
            <summary>
            Указывает, что тип должен быть зарегистрирован как сервис
            </summary>
        </member>
        <member name="P:RMLib.Services.InjectionServiceAttribute.Activation">
            <summary>
            Возвращает способ создания сервиса
            </summary>
        </member>
        <member name="P:RMLib.Services.InjectionServiceAttribute.Implementation">
            <summary>
            Возвращает тип, реализующий сервис
            </summary>
        </member>
        <member name="P:RMLib.Services.InjectionServiceAttribute.IsLazy">
            <summary>
            Возвращает/устанавливает true, если необходимо создание по требованию ("ленивое")
            </summary>
        </member>
        <member name="P:RMLib.Services.InjectionServiceAttribute.Name">
            <summary>
            Возвращает/устанавливает имя регистрации
            </summary>
        </member>
        <member name="P:RMLib.Services.InjectionServiceAttribute.Parameters">
            <summary>
            Возвращает/устанавливает параметры конструктора (только для синглтона)
            </summary>
        </member>
        <member name="T:RMLib.Collections.SynchronizedDictionary`2">
            <summary>
            Потокобезопасный словарь
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.Add(`0,`1)">
            <summary>
            Добавляет элемент в словарь
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.Remove(`0)">
            <summary>
            Удаляет элемент с указанным ключом из словаря.
            Возвращает true, если элемент был удалён, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.Remove(`0,`1@)">
            <summary>
            Удаляет элемент с указанным ключом из словаря.
            Возвращает true, если элемент был удалён, иначе false.
            В выходном параметре возвращает значение удалённого элемента или null,
            если словарь не сожержит указанный ключ
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.Remove(System.Func{System.Collections.Generic.KeyValuePair{`0,`1},System.Boolean})">
            <summary>
            Удаляет элементы, выбранные функцией из списка. Возвращает количество удалённых элементов
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.Set(`0,`1)">
            <summary>
            Устанавливает элемент по указанному ключу.
            Если элемент с указанным ключом не существует, он будет добавлен
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.Clear">
            <summary>
            Удаляет все элементы из словаря
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.ContainsKey(`0)">
            <summary>
            Возвращает true, если словарь содержит указанный ключ, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.ContainsValue(`1)">
            <summary>
            Возвращает true, если словарь содержит указанный элемент, иначе false
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Возвращает элемент по заданному ключу
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Копирует элементы коллекции в массив, начиная с указанного индекса массива
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Предоставляет данные для сериализации
            </summary>
        </member>
        <member name="M:RMLib.Collections.SynchronizedDictionary`2.OnDeserialization(System.Object)">
            <summary>
            Завершение десериалазации
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedDictionary`2.Count">
            <summary>
            Возвращает количество элементов в словаре
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedDictionary`2.Item(`0)">
            <summary>
            Возвращает/устанавливает элемент по существующему ключу
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedDictionary`2.Keys">
            <summary>
            Возвращает перечислитель ключей
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedDictionary`2.Values">
            <summary>
            Возвращает перечислитель значений
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedDictionary`2.EnableSetNew">
            <summary>
            Разрешает добавление нового элемента через свойство-аксессор
            (классическое поведение словаря)
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedDictionary`2.InnerDictionary">
            <summary>
            Возвращает внутренний объект словаря
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedDictionary`2.Locker">
            <summary>
            Возвращает блокировщик
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedDictionary`2.System#Collections#ICollection#IsSynchronized">
            <summary>
            Возвращает true, если коллекция потокобезопасна, иначе false
            </summary>
        </member>
        <member name="P:RMLib.Collections.SynchronizedDictionary`2.System#Collections#ICollection#SyncRoot">
            <summary>
            Возвращает объект, который может быть использован для синхронизации доступа к коллекции
            </summary>
        </member>
        <member name="T:RMLib.EmptyStringFillStyle">
            <summary>
            Стиль заполнения пустой строки
            </summary>
        </member>
        <member name="T:RMLib.PathKind">
            <summary>
            Тип объекта, на который указывает путь
            </summary>
        </member>
        <member name="F:RMLib.PathKind.Unknown">
            <summary>
            Неизвестно
            </summary>
        </member>
        <member name="F:RMLib.PathKind.Folder">
            <summary>
            Папка
            </summary>
        </member>
        <member name="F:RMLib.PathKind.File">
            <summary>
            Файл
            </summary>
        </member>
        <member name="F:RMLib.PathKind.Mask">
            <summary>
            Маска
            </summary>
        </member>
        <member name="T:RMLib.MathHelper">
            <summary>
            Методы для работы с числами
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.Random(RMLib.IntRange)">
            <summary>
            Возвращает псевдослучайное число в указанном диапазоне
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.Random(RMLib.DoubleRange)">
            <summary>
            Возвращает псевдослучайное число в указанном диапазоне
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.GetExp(System.Double)">
            <summary>
            Возвращает порядок числа
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.MakeRange(System.Double)">
            <summary>
            Возвращает диапазон на основе числа с размахом на его порядок
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.GetNearestPow2(System.Double)">
            <summary>
            Возвращает ближайшую целую к числу степень двойки
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.IsPow2(System.Double)">
            <summary>
            Возвращает true, если число является степенью двойки
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.IsEqual(System.Double,System.Double)">
            <summary>
            Возвращает true, если два числа равны с точностью до 6-го знака
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.ToStringExp(System.Double)">
            <summary>
            Возвращает строковое представление числа в экспоненциальном виде
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.ToStringExp(System.Double,System.Int32)">
            <summary>
            Возвращает строковое представление числа в экспоненциальном виде
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.ToString(System.Double,System.Int32)">
            <summary>
            Возвращает строковое представление числа. Если порядок числа меньше 6-ти число округляется,
            иначе представляется в экспоненциальном виде
            </summary>
        </member>
        <member name="M:RMLib.MathHelper.ToString(System.Double,System.String)">
            <summary>
            Возвращает строковое представление числа. Если порядок числа меньше 6-ти число форматируется,
            иначе представляется в экспоненциальном виде
            </summary>
        </member>
        <member name="T:RMLib.StringHelper">
            <summary>
            Методы для работы со строками
            </summary>
        </member>
        <member name="M:RMLib.StringHelper.ToTitleCase(System.String)">
            <summary>
            Переводит первый символ строки в верхний регистр
            </summary>
        </member>
        <member name="M:RMLib.StringHelper.EnsureNotEmpty(System.String,RMLib.EmptyStringFillStyle)">
            <summary>
            Заполняет пустую строку указанным стилем
            </summary>
        </member>
        <member name="M:RMLib.StringHelper.EnsureNotEmpty(System.String,RMLib.EmptyStringFillStyle,System.Int32)">
            <summary>
            Заполняет пустую строку указанным стилем
            </summary>
        </member>
        <member name="M:RMLib.StringHelper.AppendLineIfNotEmpty(System.Text.StringBuilder,System.String)">
            <summary>
            Если строка не пустая, добавляет знак завершения строки и эту строку к концу данного экземпляра
            </summary>
        </member>
        <member name="M:RMLib.StringHelper.Split(System.String,System.String)">
            <summary>
            Разделяет строку на подстроки, используя указанный разделитель
            </summary>
        </member>
        <member name="M:RMLib.StringHelper.Split(System.String,System.String,System.StringSplitOptions)">
            <summary>
            Разделяет строку на подстроки, используя указанный разделитель
            </summary>
        </member>
        <member name="T:RMLib.PathHelper">
            <summary>
            Методы для работы с путями
            </summary>
        </member>
        <member name="M:RMLib.PathHelper.IsRemote(System.String)">
            <summary>
            Возвращает true, если путь сетевой
            </summary>
        </member>
        <member name="M:RMLib.PathHelper.ToNetwork(System.String,System.String)">
            <summary>
            Возвращает сетевой путь на основе относительного локального пути и имени хоста
            </summary>
        </member>
        <member name="M:RMLib.PathHelper.IsReadOnly(System.String)">
            <summary>
            Возвращает true, если путь предназначен только для чтения
            </summary>
        </member>
        <member name="M:RMLib.PathHelper.EndsWithSeparator(System.String)">
            <summary>
            Возвращает true, если путь заканчивается символом разделителя каталогов
            </summary>
        </member>
        <member name="M:RMLib.PathHelper.EnsureExtension(System.String)">
            <summary>
            Добавляет разделитель (точку) к расширению, если её не существует
            </summary>
        </member>
        <member name="M:RMLib.PathHelper.GetPathKind(System.String)">
            <summary>
            Возвращает тип объекта, на который указывает путь
            </summary>
        </member>
        <member name="M:RMLib.PathHelper.GetPathKind(System.String,System.IO.FileSystemInfo@)">
            <summary>
            Возвращает тип объекта, на который указывает путь
            </summary>
        </member>
        <member name="T:RMLib.CharHelper">
            <summary>
            Методы для работа с символами
            </summary>
        </member>
        <member name="M:RMLib.CharHelper.GetSign(System.Int32)">
            <summary>
            Возвращает символ знака числа
            </summary>
        </member>
        <member name="M:RMLib.CharHelper.GetSign(System.Double)">
            <summary>
            Возвращает символ знака числа
            </summary>
        </member>
        <member name="T:RMLib.DrawingHelper">
            <summary>
            Методы для работы с объектами рисования
            </summary>
        </member>
        <member name="M:RMLib.DrawingHelper.GetRandomColor">
            <summary>
            Возвращает случайный цвет
            </summary>
        </member>
        <member name="M:RMLib.DrawingHelper.Invert(System.Drawing.Color)">
            <summary>
            Возвращает инвертированный цвет
            </summary>
        </member>
        <member name="T:RMLib.IID`1">
            <summary>
            Определяет объект, содержащий идентификатор
            </summary>
        </member>
        <member name="P:RMLib.IID`1.ID">
            <summary>
            Возвращает идентификатор объекта
            </summary>
        </member>
        <member name="T:RMLib.GuidBased">
            <summary>
            Абстрактный базовый класс для объектов содержащих идентификатор типа Guid
            </summary>
        </member>
        <member name="P:RMLib.GuidBased.ID">
            <summary>
            Возвращает идентификатор
            </summary>
        </member>
        <member name="T:RMLib.IRange`1">
            <summary>
            Определяет диапазон значений и методы работы с ним
            </summary>
        </member>
        <member name="M:RMLib.IRange`1.Contains(`0)">
            <summary>
            Возвращает true, если указанное значение входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IRange`1.Contains(RMLib.IRange{`0})">
            <summary>
            Возвращает true, если указанный диапазон входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IRange`1.IntersectsWith(RMLib.IRange{`0})">
            <summary>
            Возвращает true, если указанный диапазон пересекается с диапазоном, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IRange`1.Flatten(`0)">
            <summary>
            Возвращает массив значений диапазона с указанным шагом
            </summary>
        </member>
        <member name="M:RMLib.IRange`1.Coerce(`0)">
            <summary>
            Выравнивает значиние по диапазону
            </summary>
        </member>
        <member name="M:RMLib.IRange`1.Shift(`0)">
            <summary>
            Изменяет значения границ диапазона на указанную величину
            </summary>
        </member>
        <member name="P:RMLib.IRange`1.Start">
            <summary>
            Возвращает/устанавливает начальное значение диапазона
            </summary>
        </member>
        <member name="P:RMLib.IRange`1.End">
            <summary>
            Возвращает/устанавливает конечное значение диапазона
            </summary>
        </member>
        <member name="P:RMLib.IRange`1.Length">
            <summary>
            Возвращает длину диапазона
            </summary>
        </member>
        <member name="P:RMLib.IRange`1.IsEmpty">
            <summary>
            Возвращает true, если диапазон пуст (содержит значения по умолчанию для типа), иначе false
            </summary>
        </member>
        <member name="P:RMLib.IRange`1.IsValid">
            <summary>
            Возвращает true, если диапазон действителен (конечное значение больше или равно начальному), иначе false
            </summary>
        </member>
        <member name="T:RMLib.RangeComparer`1">
            <summary>
            Поддержка сравнения диапазонов
            </summary>
        </member>
        <member name="T:RMLib.IntRange">
            <summary>
            Диапазон целых чисел
            </summary>
        </member>
        <member name="F:RMLib.IntRange.Empty">
            <summary>
            Пустой диапазон
            </summary>
        </member>
        <member name="F:RMLib.IntRange.MaxRange">
            <summary>
            Максимальный диапазон
            </summary>
        </member>
        <member name="M:RMLib.IntRange.TryParse(System.String,RMLib.IntRange@)">
            <summary>
            Преобразует строковое представление диапазона
            </summary>
        </member>
        <member name="M:RMLib.IntRange.op_Equality(RMLib.IntRange,RMLib.IntRange)">
            <summary>
            Оператор равенства
            </summary>
        </member>
        <member name="M:RMLib.IntRange.op_Inequality(RMLib.IntRange,RMLib.IntRange)">
            <summary>
            Оператор неравенства
            </summary>
        </member>
        <member name="M:RMLib.IntRange.op_Addition(RMLib.IntRange,System.Int32)">
            <summary>
            Оператор сложения
            </summary>
        </member>
        <member name="M:RMLib.IntRange.op_Subtraction(RMLib.IntRange,System.Int32)">
            <summary>
            Оператор вычитания
            </summary>
        </member>
        <member name="M:RMLib.IntRange.op_Explicit(RMLib.IntRange)~System.Int64">
            <summary>
            Оператор преобразования в Int64
            </summary>
        </member>
        <member name="M:RMLib.IntRange.op_Explicit(RMLib.IntRange)~RMLib.DoubleRange">
            <summary>
            Оператор преобразования в DoubleRange
            </summary>
        </member>
        <member name="M:RMLib.IntRange.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Загружает диапазон из элемента XML
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Contains(System.Int32)">
            <summary>
            Возвращает true, если указанное значение входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Contains(RMLib.IRange{System.Int32})">
            <summary>
            Возвращает true, если указанный диапазон входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IntRange.IntersectsWith(RMLib.IRange{System.Int32})">
            <summary>
            Возвращает true, если указанный диапазон пересекается с диапазоном, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Flatten(System.Int32)">
            <summary>
            Возвращает массив значений диапазона с указанным шагом
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Coerce(System.Int32)">
            <summary>
            Выравнивает значиние по диапазону
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Shift(System.Int32)">
            <summary>
            Изменяет значения границ диапазона на указанную величину
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Clone">
            <summary>
            Возвращает копию диапазона
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Contains(System.Int64)">
            <summary>
            Возвращает true, если указанное значение входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Contains(System.Single)">
            <summary>
            Возвращает true, если указанное значение входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Contains(System.Double)">
            <summary>
            Возвращает true, если указанное значение входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Contains(RMLib.IntRange)">
            <summary>
            Возвращает true, если указанный диапазон входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IntRange.IntersectsWith(RMLib.IntRange)">
            <summary>
            Возвращает true, если указанный диапазон пересекается с диапазоном, иначе false
            </summary>
        </member>
        <member name="M:RMLib.IntRange.Reset">
            <summary>
            Сброс границ диапазона в значения по умолчанию
            </summary>
        </member>
        <member name="M:RMLib.IntRange.ToString">
            <summary>
            Возвращает строковое представление диапазона
            </summary>
        </member>
        <member name="P:RMLib.IntRange.Start">
            <summary>
            Возвращает/устанавливает начальное значение диапазона
            </summary>
        </member>
        <member name="P:RMLib.IntRange.End">
            <summary>
            Возвращает/устанавливает конечное значение диапазона
            </summary>
        </member>
        <member name="P:RMLib.IntRange.Length">
            <summary>
            Возвращает длину диапазона
            </summary>
        </member>
        <member name="P:RMLib.IntRange.IsEmpty">
            <summary>
            Возвращает true, если диапазон пуст (содержит значения по умолчанию для типа), иначе false
            </summary>
        </member>
        <member name="P:RMLib.IntRange.IsValid">
            <summary>
            Возвращает true, если диапазон действителен (конечное значение больше или равно начальному), иначе false
            </summary>
        </member>
        <member name="T:RMLib.DoubleRange">
            <summary>
            Диапазон чисел с плавающей точкой
            </summary>
        </member>
        <member name="F:RMLib.DoubleRange.Empty">
            <summary>
            Пустой диапазон
            </summary>
        </member>
        <member name="F:RMLib.DoubleRange.MaxRange">
            <summary>
            Максимальный диапазон
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.TryParse(System.String,RMLib.DoubleRange@)">
            <summary>
            Преобразует строковое представление диапазона
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.op_Equality(RMLib.DoubleRange,RMLib.DoubleRange)">
            <summary>
            Оператор равенства
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.op_Inequality(RMLib.DoubleRange,RMLib.DoubleRange)">
            <summary>
            Оператор неравенства
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.op_Addition(RMLib.DoubleRange,System.Double)">
            <summary>
            Оператор сложения
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.op_Subtraction(RMLib.DoubleRange,System.Double)">
            <summary>
            Оператор вычитания
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.op_Explicit(RMLib.DoubleRange)~RMLib.IntRange">
            <summary>
            Оператор преобразования в IntRange
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Загружает диапазон из элемента XML
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Contains(System.Double)">
            <summary>
            Возвращает true, если указанное значение входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Contains(RMLib.IRange{System.Double})">
            <summary>
            Возвращает true, если указанный диапазон входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.IntersectsWith(RMLib.IRange{System.Double})">
            <summary>
            Возвращает true, если указанный диапазон пересекается с диапазоном, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Flatten(System.Double)">
            <summary>
            Возвращает массив значений диапазона с указанным шагом
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Coerce(System.Double)">
            <summary>
            Выравнивает значиние по диапазону
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Shift(System.Double)">
            <summary>
            Изменяет значения границ диапазона на указанную величину
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Clone">
            <summary>
            Возвращает копию диапазона
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Contains(System.Int32)">
            <summary>
            Возвращает true, если указанное значение входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Contains(System.Int64)">
            <summary>
            Возвращает true, если указанное значение входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Contains(System.Single)">
            <summary>
            Возвращает true, если указанное значение входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Contains(RMLib.DoubleRange)">
            <summary>
            Возвращает true, если указанный диапазон входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.IntersectsWith(RMLib.DoubleRange)">
            <summary>
            Возвращает true, если указанный диапазон пересекается с диапазоном, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.Reset">
            <summary>
            Сброс границ диапазона в значения по умолчанию
            </summary>
        </member>
        <member name="M:RMLib.DoubleRange.ToString">
            <summary>
            Возвращает строковое представление диапазона
            </summary>
        </member>
        <member name="P:RMLib.DoubleRange.Start">
            <summary>
            Возвращает/устанавливает начальное значение диапазона
            </summary>
        </member>
        <member name="P:RMLib.DoubleRange.End">
            <summary>
            Возвращает/устанавливает конечное значение диапазона
            </summary>
        </member>
        <member name="P:RMLib.DoubleRange.Length">
            <summary>
            Возвращает длину диапазона
            </summary>
        </member>
        <member name="P:RMLib.DoubleRange.IsEmpty">
            <summary>
            Возвращает true, если диапазон пуст (содержит значения по умолчанию для типа), иначе false
            </summary>
        </member>
        <member name="P:RMLib.DoubleRange.IsValid">
            <summary>
            Возвращает true, если диапазон действителен (конечное значение больше или равно начальному), иначе false
            </summary>
        </member>
        <member name="T:RMLib.DateTimeRange">
            <summary>
            Диапазон дат
            </summary>
        </member>
        <member name="F:RMLib.DateTimeRange.Empty">
            <summary>
            Пустой диапазон
            </summary>
        </member>
        <member name="F:RMLib.DateTimeRange.MaxRange">
            <summary>
            Максимальный диапазон
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.TryParse(System.String,RMLib.DateTimeRange@)">
            <summary>
            Преобразует строковое представление диапазона
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.op_Equality(RMLib.DateTimeRange,RMLib.DateTimeRange)">
            <summary>
            Оператор равенства
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.op_Inequality(RMLib.DateTimeRange,RMLib.DateTimeRange)">
            <summary>
            Оператор неравенства
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.op_Addition(RMLib.DateTimeRange,System.TimeSpan)">
            <summary>
            Оператор сложения
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.op_Subtraction(RMLib.DateTimeRange,System.TimeSpan)">
            <summary>
            Оператор вычитания
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Загружает диапазон из элемента XML
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.Contains(System.DateTime)">
            <summary>
            Возвращает true, если указанное значение входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.Contains(RMLib.IRange{System.DateTime})">
            <summary>
            Возвращает true, если указанный диапазон входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.IntersectsWith(RMLib.IRange{System.DateTime})">
            <summary>
            Возвращает true, если указанный диапазон пересекается с диапазоном, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.Flatten(System.DateTime)">
            <summary>
            Возвращает массив значений диапазона с указанным шагом
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.Coerce(System.DateTime)">
            <summary>
            Выравнивает значиние по диапазону
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.Shift(System.DateTime)">
            <summary>
            Изменяет значения границ диапазона на указанную величину
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.Contains(RMLib.DateTimeRange)">
            <summary>
            Возвращает true, если указанный диапазон входит в диапазон, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.IntersectsWith(RMLib.DateTimeRange)">
            <summary>
            Возвращает true, если указанный диапазон пересекается с диапазоном, иначе false
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.Reset">
            <summary>
            Сброс границ диапазона в значения по умолчанию
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.GetLength">
            <summary>
            Возвращает длину диапазона
            </summary>
        </member>
        <member name="M:RMLib.DateTimeRange.ToString">
            <summary>
            Возвращает строковое представление диапазона
            </summary>
        </member>
        <member name="P:RMLib.DateTimeRange.Start">
            <summary>
            Возвращает/устанавливает начальное значение диапазона
            </summary>
        </member>
        <member name="P:RMLib.DateTimeRange.End">
            <summary>
            Возвращает/устанавливает конечное значение диапазона
            </summary>
        </member>
        <member name="P:RMLib.DateTimeRange.Length">
            <summary>
            Возвращает длину диапазона
            </summary>
        </member>
        <member name="P:RMLib.DateTimeRange.IsEmpty">
            <summary>
            Возвращает true, если диапазон пуст (содержит значения по умолчанию для типа), иначе false
            </summary>
        </member>
        <member name="P:RMLib.DateTimeRange.IsValid">
            <summary>
            Возвращает true, если диапазон действителен (конечное значение больше или равно начальному), иначе false
            </summary>
        </member>
        <member name="T:RMLib.IResourceAccessor">
            <summary>
            Интерфейс доступа к ресурсам сборки
            </summary>
        </member>
        <member name="M:RMLib.IResourceAccessor.GetResource(System.String)">
            <summary>
            Возвращает ресурс по имени
            </summary>
        </member>
        <member name="M:RMLib.IResourceAccessor.GetResource(System.String,System.Globalization.CultureInfo)">
            <summary>
            Возвращает локализованный ресурс по имени
            </summary>
        </member>
        <member name="T:RMLib.ResourceAccessor">
            <summary>
            Класс доступа к ресурсам сборки
            </summary>
        </member>
        <member name="M:RMLib.ResourceAccessor.GetResource(System.String)">
            <summary>
            Возвращает ресурс по имени
            </summary>
        </member>
        <member name="M:RMLib.ResourceAccessor.GetResource(System.String,System.Globalization.CultureInfo)">
            <summary>
            Возвращает локализованный ресурс по имени
            </summary>
        </member>
        <member name="T:RMLib.ApplicationInstance">
            <summary>
            Класс для проверки повторного запуска приложения
            </summary>
        </member>
        <member name="M:RMLib.ApplicationInstance.#ctor">
            <summary>
            Создавать экземпляры этого класса нет смысла
            </summary>
        </member>
        <member name="M:RMLib.ApplicationInstance.IsRunning(System.String,System.Boolean)">
            <summary>
            Возвращает true, если вызывающее приложение уже запущено
            </summary>
        </member>
        <member name="T:RMLib.SettingsResult">
            <summary>
            Результат редактирования настроек
            </summary>
        </member>
        <member name="P:RMLib.SettingsResult.Changed">
            <summary>
            Возврвщает true, если настройки изменились, иначе false
            </summary>
        </member>
        <member name="P:RMLib.SettingsResult.NeedRestart">
            <summary>
            Возврвщает true, если требуется перезапуск приложения, иначе false
            </summary>
        </member>
        <member name="T:RMLib.Singleton`1">
            <summary>
            Контейнер для синглтона
            </summary>
        </member>
        <member name="P:RMLib.Singleton`1.Instance">
            <summary>
            Создаёт и возвращает синглтон объекта
            </summary>
        </member>
        <member name="T:RMLib.Threading.IWaitable">
            <summary>
            Интерфейс объекта, поддерживающего ожидание завершения выполнения
            </summary>
        </member>
        <member name="M:RMLib.Threading.IWaitable.WaitForComplete">
            <summary>
            Ожидает завершения выполнения
            </summary>
        </member>
        <member name="M:RMLib.Threading.IWaitable.WaitForComplete(System.TimeSpan)">
            <summary>
            Ожидает завершения выполнения в течение указанного периода времени
            </summary>
        </member>
        <member name="T:RMLib.Threading.QueueProcessOptions">
            <summary>
            Опции обработки элементов очереди
            </summary>
        </member>
        <member name="F:RMLib.Threading.QueueProcessOptions.None">
            <summary>
            Отсутствуют
            </summary>
        </member>
        <member name="F:RMLib.Threading.QueueProcessOptions.SafeDequeue">
            <summary>
            Удаление элемента из очереди после успешной обработки
            </summary>
        </member>
        <member name="F:RMLib.Threading.QueueProcessOptions.Requeue">
            <summary>
            Постановка элемента в конец очереди после неуспешной обработки
            </summary>
        </member>
        <member name="F:RMLib.Threading.QueueProcessOptions.EnsureProcess">
            <summary>
            Обрабатывать оставшиеся элементы после останова потока
            </summary>
        </member>
        <member name="T:RMLib.Threading.QueueThread`1">
            <summary>
            Обрабатывает элементы очереди в отдельном потоке
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.GetEnumerator">
            <summary>
            Возвращает типизированный перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Возвращает перечислитель коллекции
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.WaitForComplete">
            <summary>
            Ожидание завершения выполнения действия
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.WaitForComplete(System.TimeSpan)">
            <summary>
            Ожидание завершения выполнения действия
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.Start">
            <summary>
            Запуск потока
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.Start(System.Boolean)">
            <summary>
            Запуск потока
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.Start(System.Boolean,System.Object)">
            <summary>
            Запуск потока с параметром
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.Stop">
            <summary>
            Останов потока
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.Enqueue(`0)">
            <summary>
            Добавление элемента в очередь и запуск обработки
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.Enqueue(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Добавление элементы в очередь и запуск обработки
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.Clear">
            <summary>
            Удаляет все элементы из очереди
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.CanRequeue(`0)">
            <summary>
            Определяет нужна ли повторная обработка элемента, если задана соответствующая опция
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.CanDequeueUnsafe(`0)">
            <summary>
            Определяет можно ли убирать ли элемент из очереди, если задана соответствующая опция
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.ProcessIdle">
            <summary>
            Действие при вхождении потока в состояния простоя
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.QueueProcessThread(System.Object)">
            <summary>
            Поток работы с очередью.
            Элемента удаляется из очереди перед обработкой
            </summary>
        </member>
        <member name="M:RMLib.Threading.QueueThread`1.SafeQueueProcessThread(System.Object)">
            <summary>
            Поток работы с очередью.
            Элемент удаляется из очереди после успешной обработки
            </summary>
        </member>
        <member name="P:RMLib.Threading.QueueThread`1.Count">
            <summary>
            Возвращает количество элементов в очереди
            </summary>
        </member>
        <member name="P:RMLib.Threading.QueueThread`1.Delay">
            <summary>
            Возвращает/устанавливает задержку после неуспешной обработки элемента
            </summary>
        </member>
        <member name="P:RMLib.Threading.QueueThread`1.Thread">
            <summary>
            Возвращает хост потока
            </summary>
        </member>
        <member name="T:RMLib.ThrowHelper">
            <summary>
            Методы для генерирования исключений
            </summary>
        </member>
        <member name="M:RMLib.ThrowHelper.ThrowIfNull(System.Object)">
            <summary>
            Выбрасывает NullReferenceException если аргумент равен null
            </summary>
        </member>
        <member name="M:RMLib.ThrowHelper.ThrowIfNull(System.Object,System.String)">
            <summary>
            Выбрасывает NullReferenceException с указанным сообщением если аргумент равен null
            </summary>
        </member>
        <member name="M:RMLib.ThrowHelper.ThrowIfNullArgument(System.Object,System.String)">
            <summary>
            Выбрасывает ArgumentNullException если аргумент равен null
            </summary>
        </member>
        <member name="M:RMLib.ThrowHelper.ThrowIfNotType``1(System.Object)">
            <summary>
            Выбрасывает InvalidCastException если аргумент не может быть приведён к указанному типу
            </summary>
        </member>
        <member name="M:RMLib.Services.Windows.WindowsServiceHelper.InstallService(System.String,System.String,System.ServiceProcess.ServiceStartMode,System.String,System.String)">
            <summary>
            Устанавливает windows-сервис в систему
            </summary>
        </member>
        <member name="M:RMLib.Services.Windows.WindowsServiceHelper.InstallService(System.String,System.String,System.ServiceProcess.ServiceStartMode,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Устанавливает windows-сервис в систему
            </summary>
        </member>
        <member name="M:RMLib.Services.Windows.WindowsServiceHelper.UninstallService(System.String)">
            <summary>
            Удаляет windows-сервис из системы
            </summary>
        </member>
        <member name="M:RMLib.Services.Windows.WindowsServiceHelper.RunInteractiveProcess(System.String,System.String,System.Boolean)">
            <summary>
            Запускает процесс от имени учётной записи пользователя или учётной записи LocalSystem.
            Должна выполняться под учётной записью LocalSystem
            </summary>
        </member>
        <member name="M:RMLib.Services.Windows.WindowsServiceHelper.RunInteractiveProcessCore(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Запускает процесс от имени учётной записи пользователя, который присоединён к консоли
            (физическая клавиатура и монитор или RDP-сессия, созданная с флажком "консольная")
            или учётной записи LocalSystem. Должна выполняться под учётной записью LocalSystem
            </summary>
        </member>
        <member name="T:RMLib.Threading.LockHelper">
            <summary>
            Методы расширения для блокировщиков
            </summary>
        </member>
        <member name="M:RMLib.Threading.LockHelper.Read(System.Threading.ReaderWriterLockSlim,System.Action)">
            <summary>
            Выполнить действие c блокировкой Read
            </summary>
        </member>
        <member name="M:RMLib.Threading.LockHelper.UpgradeableRead(System.Threading.ReaderWriterLockSlim,System.Action)">
            <summary>
            Выполнить действие c блокировкой UpgradeableRead
            </summary>
        </member>
        <member name="M:RMLib.Threading.LockHelper.Write(System.Threading.ReaderWriterLockSlim,System.Action)">
            <summary>
            Выполнить действие c блокировкой Write
            </summary>
        </member>
        <member name="T:RMLib.Threading.ThreadHost">
            <summary>
            Хост потока. Позволяет контролировать выполнение действия в потоке
            </summary>
        </member>
        <member name="T:RMLib.Threading.ThreadBase">
            <summary>
            Выполняет код в отдельном потоке
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadBase.DisposeManagedResources">
            <summary>
            Освобождает управляемые ресурсы
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadBase.StartThreadCore(System.Object,System.Boolean)">
            <summary>
            Создание и запуск потока
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadBase.StopThreadCore(System.Boolean)">
            <summary>
            Останов потока
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadBase.ThrowIfImmutable">
            <summary>
            Выбрасывает исключение, если свойства потока не могут быть изменены
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadBase.ThrowIfRecursiveCall">
            <summary>
            Выбрасывает исключение при рекурсивном вызове
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadBase.ThreadRun(System.Object)">
            <summary>
            Метод выполняемый в потоке
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadBase.ToString">
            <summary>
            Возвращает строковое представление потока
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadBase.ThreadID">
            <summary>
            Возвращает идентификатор потока
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadBase.Name">
            <summary>
            Возвращает/устанавливает имя потока
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadBase.Started">
            <summary>
            Возвращает true, если поток запущен
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadBase.Thread">
            <summary>
            Возвращает поток
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadBase.ThreadEvent">
            <summary>
            Возвращает событие, синхронизирующее работу потока
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadBase.RunningThreads">
            <summary>
            Возвращает список запущенных потоков основанных на ThreadBase
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.StartThreads(RMLib.Threading.ThreadHost[])">
            <summary>
            Запуск потоков с откатом. Если хотя бы один не запустился, все ранее запущенные потоки останавливаются
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.RunOnce(System.Action{System.Object})">
            <summary>
            Выполнение указанного действия в отдельном потоке. После выполнения поток завершается
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.RunOnce(System.Action{System.Object},System.Object)">
            <summary>
            Выполнение указанного действия в отдельном потоке. После выполнения поток завершается
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.UnwrapParameter(System.Object)">
            <summary>
            Возвращает значение параметра по умолчанию
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.WaitForComplete">
            <summary>
            Ожидание завершения выполнения действия
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.WaitForComplete(System.TimeSpan)">
            <summary>
            Ожидание завершения выполнения действия
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.StartThread">
            <summary>
            Запуск потока
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.StartThread(System.Object)">
            <summary>
            Запуск потока с параметром
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.StopThread">
            <summary>
            Останов потока без ожидания завершения его работы
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.StopThread(System.Boolean)">
            <summary>
            Останов потока
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.PushThread">
            <summary>
            Возобновлние выполнения потока (имеет смысл, если AutoInit = false)
            </summary>
        </member>
        <member name="M:RMLib.Threading.ThreadHost.ThreadRun(System.Object)">
            <summary>
            Метод выполняемый в потоке
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadHost.AutoInit">
            <summary>
            Возвращает/устанавливает признак автозапуска потока.
            Если true, действие начинает выполняться сразу после старта
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadHost.AutoReset">
            <summary>
            Возвращает/устанавливает признак повтора выполнения действия.
            Если true, действие выполняется повторно, пока поток не будет остановлен.
            Начало повторного выполнения зависит от значения AutoInit
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadHost.CallBack">
            <summary>
            Возвращает/устанавливает действие для выполнения в потоке
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadHost.Parameter">
            <summary>
            Возвращает/устанавливает значение параметра по умолчанию
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadHost.RunCount">
            <summary>
            Возвращает количество вызовов действия
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadHost.Hosts">
            <summary>
            Возвращает список зарегистрированных хостов ThreadHost
            </summary>
        </member>
        <member name="T:RMLib.Threading.ThreadHost.ThreadParameter">
            <summary>
            Параметр потока
            </summary>
        </member>
        <member name="P:RMLib.Threading.ThreadHost.ThreadParameter.Value">
            <summary>
            Возвращает/устанавливает значение параметра
            </summary>
        </member>
        <member name="T:RMLib.Threading.TimerThread">
            <summary>
            Выполняет действие в отдельном потоке с задаваемой периодичностью
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.WaitForComplete">
            <summary>
            Ожидание завершения выполнения действия
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.WaitForComplete(System.TimeSpan)">
            <summary>
            Ожидание завершения выполнения действия
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.Start">
            <summary>
            Запуск потока и таймера
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.Start(System.Boolean)">
            <summary>
            Запуск потока и таймера
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.Start(System.Boolean,System.Object)">
            <summary>
            Запуск потока и таймера
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.Stop">
            <summary>
            Останов потока и таймера
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.Stop(System.Boolean)">
            <summary>
            Останов потока и таймера
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.Suspend">
            <summary>
            Останов таймера
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.Resume">
            <summary>
            Запуск таймера
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.Resume(System.Boolean)">
            <summary>
            Запуск таймера с возможностью немедленного выполнения
            </summary>
        </member>
        <member name="M:RMLib.Threading.TimerThread.Resume(System.Boolean,System.Boolean)">
            <summary>
            Запуск таймера с возможностью немедленного выполнения и одного срабатывания
            </summary>
        </member>
        <member name="P:RMLib.Threading.TimerThread.Interval">
            <summary>
            Возвращает/устанавливает периодичность выполнения метода в потоке
            </summary>
        </member>
        <member name="P:RMLib.Threading.TimerThread.Started">
            <summary>
            Возвращает true, если поток запущен, иначе false
            </summary>
        </member>
        <member name="P:RMLib.Threading.TimerThread.Running">
            <summary>
            Возвращает true, если таймер работает, иначе false
            </summary>
        </member>
        <member name="P:RMLib.Threading.TimerThread.StopRequested">
            <summary>
            Возвращает true, если был запрошен останов потока, иначе false
            </summary>
        </member>
        <member name="P:RMLib.Threading.TimerThread.Thread">
            <summary>
            Возвращает хост потока
            </summary>
        </member>
        <member name="T:RMLib.SizeUnits">
            <summary>
            Единицы измерения
            </summary>
        </member>
        <member name="F:RMLib.SizeUnits.Bytes">
            <summary>
            Байт
            </summary>
        </member>
        <member name="F:RMLib.SizeUnits.Kb">
            <summary>
            Килобайт
            </summary>
        </member>
        <member name="F:RMLib.SizeUnits.Mb">
            <summary>
            Мегабайт
            </summary>
        </member>
        <member name="F:RMLib.SizeUnits.Gb">
            <summary>
            Гигабайт
            </summary>
        </member>
        <member name="F:RMLib.SizeUnits.Tb">
            <summary>
            Терабайт
            </summary>
        </member>
        <member name="F:RMLib.SizeUnits.Pb">
            <summary>
            Петабайт
            </summary>
        </member>
        <member name="F:RMLib.SizeUnits.Eb">
            <summary>
            Эксабайт
            </summary>
        </member>
        <member name="F:RMLib.SizeUnits.Zb">
            <summary>
            Зеттабайт
            </summary>
        </member>
        <member name="F:RMLib.SizeUnits.Yb">
            <summary>
            Йоттабайт
            </summary>
        </member>
        <member name="T:RMLib.SizeUnitsHelper">
            <summary>
            Методы для работы с единицами измерения
            </summary>
        </member>
        <member name="M:RMLib.SizeUnitsHelper.GetSizeUnits(System.Double)">
            <summary>
            Возвращает максимальную единицу измерения, в пределах которой находится число
            </summary>
        </member>
        <member name="M:RMLib.SizeUnitsHelper.ScaleSize(System.Double,RMLib.SizeUnits)">
            <summary>
            Масштабирует число по указанной единице измерения
            </summary>
        </member>
        <member name="M:RMLib.SizeUnitsHelper.GetString(RMLib.SizeUnits)">
            <summary>
            Возвращает строковое представление единицы измерения
            </summary>
        </member>
        <member name="M:RMLib.SizeUnitsHelper.GetScaledString(System.Double)">
            <summary>
            Масштабирует число по максимальной единице измерения, в пределах которой находится число, и
            возвращает строковое представление получившегося числа и выбранной единицы измерения
            </summary>
        </member>
        <member name="M:RMLib.SizeUnitsHelper.GetScaledString(System.Double,System.Int32)">
            <summary>
            Масштабирует число по максимальной единице измерения, в пределах которой находится число, и
            возвращает строковое представление получившегося числа и выбранной единицы измерения
            </summary>
        </member>
        <member name="T:RMLib.FrameworkVersion">
            <summary>
            Specifies the .NET Framework versions
            </summary>
        </member>
        <member name="F:RMLib.FrameworkVersion.Version10">
            <summary>
            .NET Framework 1.0
            </summary>
        </member>
        <member name="F:RMLib.FrameworkVersion.Version11">
            <summary>
            .NET Framework 1.1
            </summary>
        </member>
        <member name="F:RMLib.FrameworkVersion.Version20">
            <summary>
            .NET Framework 2.0
            </summary>
        </member>
        <member name="F:RMLib.FrameworkVersion.Version30">
            <summary>
            .NET Framework 3.0
            </summary>
        </member>
        <member name="F:RMLib.FrameworkVersion.Version35">
            <summary>
            .NET Framework 3.5
            </summary>
        </member>
        <member name="F:RMLib.FrameworkVersion.Version40">
            <summary>
            .NET Framework 4.0
            </summary>
        </member>
        <member name="T:RMLib.WindowsFoundationLibrary">
            <summary>
            Specifies the .NET 3.0 Windows Foundation Library
            </summary>
        </member>
        <member name="F:RMLib.WindowsFoundationLibrary.WCF">
            <summary>
            Windows Communication Foundation
            </summary>
        </member>
        <member name="F:RMLib.WindowsFoundationLibrary.WPF">
            <summary>
            Windows Presentation Foundation
            </summary>
        </member>
        <member name="F:RMLib.WindowsFoundationLibrary.WF">
            <summary>
            Windows Workflow Foundation
            </summary>
        </member>
        <member name="F:RMLib.WindowsFoundationLibrary.CardSpace">
            <summary>
            Windows CardSpace
            </summary>
        </member>
        <member name="T:RMLib.FrameworkHelper">
            <summary>
            Provides support for determining if a specific version of the .NET Framework
            runtime is installed and the service pack level for the runtime version
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.IsInstalled(RMLib.FrameworkVersion@)">
            <summary>
            Check .NET Framework version installed
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.GetServicePackLevel(RMLib.FrameworkVersion)">
            <summary>
            Retrieves the service pack level for the specified .NET Framework version
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.GetServicePackLevel(RMLib.WindowsFoundationLibrary)">
            <summary>
            Retrieves the service pack level for the specified .NET Framework Foundation Library
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.GetExactVersion(RMLib.FrameworkVersion)">
            <summary>
            Retrieves the exact version number for the specified .NET Framework version
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.GetExactVersion(RMLib.WindowsFoundationLibrary)">
            <summary>
            Retrieves the exact version number for the specified .NET Framework Foundation Library
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.GetString(RMLib.FrameworkVersion)">
            <summary>
            Возвращает строку, содержащую описание версии .NET
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.ToVersion(RMLib.FrameworkVersion)">
            <summary>
            Возвращает версию .NET из перечисления
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.IsInstalled(RMLib.FrameworkVersion)">
            <summary>
            Determines if the specified .NET Framework version is installed on the local computer
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.IsInstalled(RMLib.WindowsFoundationLibrary)">
            <summary>
            Determines if the specified .NET Framework Foundation Library is installed on the local computer
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.CheckFxVersion(RMLib.FrameworkVersion)">
            <summary>
            Retrieves the .NET Framework version number from the registry
            and validates that it is not a pre-release version number
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.GetInstallRoot">
            <summary>
            Gets the installation root path for the .NET Framework
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.GetMscorwksPath(RMLib.FrameworkVersion)">
            <summary>
            Gets the path to the Mscorwks.DLL file.
            </summary>
        </member>
        <!-- Некорректный комментарий в формате XML для члена "M:RMLib.FrameworkHelper.GetNetfx10SPLevel" проигнорирован -->
        <member name="M:RMLib.FrameworkHelper.GetNetfxSPLevel(System.String,System.String)">
            <summary>
            Detects the service pack level for a version of .NET Framework
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.GetNetfxExactVersion(System.String,System.String)">
            <summary>
            Retrieves the .NET Framework version number from the registry
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.IsNetfx10Installed">
            <summary>
            Detects if the .NET 1.0 Framework is installed
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.IsNetfx11Installed">
            <summary>
            Detects if the .NET 1.1 Framework is installed
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.IsNetfx20Installed">
            <summary>
            Detects if the .NET 2.0 Framework is installed
            </summary>
        </member>
        <!-- Некорректный комментарий в формате XML для члена "M:RMLib.FrameworkHelper.IsNetfx30Installed" проигнорирован -->
        <member name="M:RMLib.FrameworkHelper.IsNetfx35Installed">
            <summary>
            Detects if the .NET 3.5 Framework is installed
            </summary>
        </member>
        <member name="M:RMLib.FrameworkHelper.IsNetfx40Installed">
            <summary>
            Detects if the .NET 4.0 Framework is installed
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.ConnectionMonitor">
            <summary>
            Монитор соединений клиентов
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.ConnectionMonitor.Start">
            <summary>
            Запуск монитора
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.ConnectionMonitor.Stop">
            <summary>
            Останов монитора
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.ConnectionMonitor.SortConnections(System.Collections.Generic.IEnumerable{RMLib.Services.Wcf.IWcfClient})">
            <summary>
            Сортирует соединения
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.ConnectionMonitor.AfterConnection(RMLib.Services.Wcf.IWcfClient)">
            <summary>
            Вызывается после успешного соединения
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.ConnectionMonitor.MonitorThread(System.Object)">
            <summary>
            Поток монитора
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.ConnectionMonitor.ThrowIfImmutable">
            <summary>
            Выбрасывает исключение, если свойства монитора не могут быть изменены
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.CustomErrorHandler">
            <summary>
            Обработчик ошибок сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.CustomErrorHandler.OnHandleException(System.Exception)">
            <summary>
            Поднимает событие HandleException
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.CustomErrorHandler.HandleError(System.Exception)">
            <summary>
            Обработка исключения
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.CustomErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)">
            <summary>
            Фабрика исключений
            </summary>
        </member>
        <member name="E:RMLib.Services.Wcf.CustomErrorHandler.HandleException">
            <summary>
            Обработать исключение
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.CustomInstanceProvider">
            <summary>
            Поставщик экземпляров сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.CustomInstanceProvider.OnInstanceCreate(System.Type)">
            <summary>
            Поднимает событие InstanceRequest
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.CustomInstanceProvider.OnInstanceRelease(System.Object)">
            <summary>
            Поднимает событие InstanceRelease
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.CustomInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)">
            <summary>
            Создаёт экземпляр сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.CustomInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)">
            <summary>
            Создаёт экземпляр сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.CustomInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)">
            <summary>
            Уничтожает экземпляр сервиса
            </summary>
        </member>
        <member name="E:RMLib.Services.Wcf.CustomInstanceProvider.InstanceCreate">
            <summary>
            Запрос на создание экземпляра сервиса
            </summary>
        </member>
        <member name="E:RMLib.Services.Wcf.CustomInstanceProvider.InstanceRelease">
            <summary>
            Уведомление об уничтожении экземпляра сервиса
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.CustomServiceBehavior">
            <summary>
            Поведение сервиса для включения собственного поставщика экземпляров
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.InstanceServiceHost`1">
            <summary>
            Хост с расширенной поддержкой экземпляров сервисов
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.InstanceServiceHost`1.OnCreateInstance">
            <summary>
            Поднимает событие CreateInstance.
            Если обработчиков события нет, создаётся экземпляр по умолчанию
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.InstanceServiceHost`1.OnReleaseInstance(`0)">
            <summary>
            Поднимает событие ReleaseInstance
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.InstanceServiceHost`1.OnHandleException(System.Exception)">
            <summary>
            Поднимает событие HandleException
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.InstanceServiceHost`1.Initialize">
            <summary>
            Инициализация
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.InstanceServiceHost`1.OnInstanceRequest(System.Type)">
            <summary>
            Запрос от поставщика на создание экземпляра
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.InstanceServiceHost`1.OnInstanceRelease(System.Object)">
            <summary>
            Уведомление от поставщика об удалении экземпляра
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.InstanceServiceHost`1.Item(System.Guid)">
            <summary>
            Возвращает экземпляр сервиса по указанному идентификатору
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.InstanceServiceHost`1.Instances">
            <summary>
            Возвращает список экземпляров сервиса
            </summary>
        </member>
        <member name="E:RMLib.Services.Wcf.InstanceServiceHost`1.CreateInstance">
            <summary>
            Создание экземпляра сервиса
            </summary>
        </member>
        <member name="E:RMLib.Services.Wcf.InstanceServiceHost`1.ReleaseInstance">
            <summary>
            Уничтожение экземпляра сервиса
            </summary>
        </member>
        <member name="E:RMLib.Services.Wcf.InstanceServiceHost`1.HandleException">
            <summary>
            Обработка исключения
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.IWcfClientConfigurator">
            <summary>
            Интерфейс конфигуратора WCF-клиента
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.IWcfClientConfigurator.ConfigureFactory(System.ServiceModel.ChannelFactory,System.Type)">
            <summary>
            Настраивает фабрику каналов
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.IWcfClientConfigurator.ServiceAddress">
            <summary>
            Возвращает/устанавливает адрес сервиса
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.IWcfClientConfigurator.OperationTimeout">
            <summary>
            Возвращает/устанавливает таймаут для операций
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.WcfClientConfigurator">
            <summary>
            Конфигуратор WCF-клиента
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClientConfigurator.ConfigureFactory(System.ServiceModel.ChannelFactory,System.Type)">
            <summary>
            Настраивает фабрику каналов
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClientConfigurator.CreateEndpointAddress(System.Uri)">
            <summary>
            Создаёт адрес конечной точки
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClientConfigurator.SetEndpointBehavior(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Настраивает поведение конечной точки
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClientConfigurator.SetClientCredentials(System.ServiceModel.Description.ClientCredentials)">
            <summary>
            Настраивает параметры безопасности
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClientConfigurator.SetCallbackBehavior(System.ServiceModel.CallbackBehaviorAttribute)">
            <summary>
            Настраивает поведение обратных вызовов
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfClientConfigurator.ServiceAddress">
            <summary>
            Возвращает/устанавливает адрес сервиса
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfClientConfigurator.OperationTimeout">
            <summary>
            Возвращает/устанавливает таймаут для операций
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.WcfHelper">
            <summary>
            Методы для работы с WCF
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.MakeTCPAddress(System.String,System.Int32,System.String)">
            <summary>
            Соединяет элементы адреса в URI используя схему протокола TCP/IP
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.MakeHttpAddress(System.String,System.Int32,System.String)">
            <summary>
            Соединяет элементы адреса в URI используя схему протокола HTTP
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.MakeNamedPipeAddress(System.String,System.String)">
            <summary>
            Соединяет элементы адреса в URI используя схему протокола NamedPipe
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.CreateTCPBinding">
            <summary>
            Создаёт привязку (binding) для протокола TCP/IP
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.CreateHTTPBinding">
            <summary>
            Создаёт привязку (binding) для протокола HTTP
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.CreateNamedPipeBinding">
            <summary>
            Создаёт привязку (binding) для протокола NamedPipe
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.SetReaderQuotas(System.Xml.XmlDictionaryReaderQuotas)">
            <summary>
            Устанавливает ограничения сериализации
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.GetClientAddress">
            <summary>
            Возвращает адрес клиента
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.GetServiceAddress(System.ServiceModel.IClientChannel)">
            <summary>
            Возвращает адрес сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.CreateMessageHeader``1(System.String,System.String,``0)">
            <summary>
            Создаёт заголовок сообщения
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.SetCredentials(System.ServiceModel.Channels.Message,System.String,System.String)">
            <summary>
            Сохраняет credentials в сообщение
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.GetCredentials(System.ServiceModel.Channels.Message,System.String)">
            <summary>
            Возвращает credentials из сообщения или пустую строку, если они не найдены
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.SetClientName(System.ServiceModel.Channels.Message,System.String,System.String)">
            <summary>
            Сохраняет имя клиента в сообщение
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.GetClientName(System.ServiceModel.Channels.Message,System.String)">
            <summary>
            Возвращает имя клиента из сообщения или пустую строку, если они не найдены
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfHelper.GetOperationName(System.ServiceModel.OperationContext)">
            <summary>
            Возвращает имя текущей операции
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.IWcfServiceConfigurator">
            <summary>
            Интерфейс конфигуратора WCF-сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.IWcfServiceConfigurator.ConfigureHost(System.ServiceModel.ServiceHost)">
            <summary>
            Настройка хоста сервисов
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.IWcfServiceConfigurator.BaseAddress">
            <summary>
            Базовый адрес сервиса
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.WcfServiceConfigurator">
            <summary>
            Конфигуратор WCF-сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceConfigurator.ConfigureHost(System.ServiceModel.ServiceHost)">
            <summary>
            Настройка хоста сервисов
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceConfigurator.SetHostProperties(System.ServiceModel.ServiceHost)">
            <summary>
            Настраивает свойства хоста
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceConfigurator.SetServiceBehavior(System.ServiceModel.ServiceBehaviorAttribute)">
            <summary>
            Настраивает поведение сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceConfigurator.FindServiceEndpointInterfaces(System.Type)">
            <summary>
            Находит интерфейсы c контрактами сервиса для создания конечных точек
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceConfigurator.SetServiceCredentials(System.ServiceModel.Description.ServiceCredentials)">
            <summary>
            Настраивает параметры безопасности
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfServiceConfigurator.BaseAddress">
            <summary>
            Базовый адрес сервиса
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfServiceConfigurator.Binding">
            <summary>
            Привязка точек доступа
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.IWcfClient">
            <summary>
            Интерфейс клиента WCF
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.IWcfClient.Connect(System.TimeSpan)">
            <summary>
            Устанавливает соединение с сервисом
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.IWcfClient.Connect">
            <summary>
            Устанавливает соединение с сервисом
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.IWcfClient.Disconnect">
            <summary>
            Разрывает соединение с сервисом
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.IWcfClient.ServiceAddress">
            <summary>
            Возвращает адрес сервиса
            </summary>
        </member>
        <member name="E:RMLib.Services.Wcf.IWcfClient.Connected">
            <summary>
            Соединение с сервисом установлено
            </summary>
        </member>
        <member name="E:RMLib.Services.Wcf.IWcfClient.Disconnected">
            <summary>
            Соединение с сервисом потеряно
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.WcfClient`3">
            <summary>
            Клиент WCF. Управляет прокси-классом. Для дуплексных сервисов поддерживается объект обратного вызова.
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.OnConnected(System.Object,System.EventArgs)">
            <summary>
            Поднимает событие Connected
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.OnDisconnected(System.Object,System.EventArgs)">
            <summary>
            Поднимает событие Disconnected
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.Connect">
            <summary>
            Устанавливает соединение с сервисом
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.Connect(System.TimeSpan)">
            <summary>
            Устанавливает соединение с сервисом
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.Disconnect">
            <summary>
            Разрывает соединение с сервисом
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.CreateProxy">
            <summary>
            Создаёт новый экземпляр прокси
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.DestroyProxy">
            <summary>
            Уничтожает текущий экземпляр прокси
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.OnDisconnectedInternal(System.Object,System.EventArgs)">
            <summary>
            Поднимает событие Disconnected
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.GetServiceAddressFromConfigurator">
            <summary>
            Получение адреса сервиса из конфигуратора до соединения, из конструктора или при инъектировании
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.GetProxyState">
            <summary>
            Возвращает состояние прокси
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.InvokeProxy(System.Action)">
            <summary>
            Метод-контекст для вызова прокси
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.InvokeProxy(System.Action,System.Boolean)">
            <summary>
            Метод-контекст для вызова прокси
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.SetCredentials">
            <summary>
            Устанавливает данные авторизации и аутентификации
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfClient`3.OnEventException(System.Delegate,System.Exception)">
            <summary>
            Обрабатывает исключение обработчика событий
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfClient`3.ServiceAddress">
            <summary>
            Возвращает адрес сервиса
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfClient`3.Callback">
            <summary>
            Возвращает объект класса, реализующего интерфейс обратного вызова
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfClient`3.Proxy">
            <summary>
            Возвращает объект прокси-класса
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfClient`3.Configurator">
            <summary>
            Возвращает конфигуратор клиента
            </summary>
        </member>
        <member name="E:RMLib.Services.Wcf.WcfClient`3.Connected">
            <summary>
            Соединение с сервисом установлено
            </summary>
        </member>
        <member name="E:RMLib.Services.Wcf.WcfClient`3.Disconnected">
            <summary>
            Соединение с сервисом потеряно
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.WcfClientProxy`1">
            <summary>
            Абстрактный базовый прокси-класс клиента WCF
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.WcfDuplexClientProxy`1">
            <summary>
            Абстрактный базовый прокси-класс дуплексного клиента WCF
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.IWcfService">
            <summary>
            Интерфейс сервиса WCF
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.IWcfService.InstanceID">
            <summary>
            Возвращает идентификатор экземпляра сервиса
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.IWcfService.ClientAddress">
            <summary>
            Возвращает адрес клиента
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.IWcfService.TimeCreated">
            <summary>
            Время создания экземпляра
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.WcfService">
            <summary>
            Абстрактный базовый класс сервиса WCF
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfService.InstanceID">
            <summary>
            Возвращает идентификатор экземпляра сервиса
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfService.ClientAddress">
            <summary>
            Возвращает адрес клиента
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfService.TimeCreated">
            <summary>
            Время создания экземпляра
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.WcfService`1">
            <summary>
            Абстрактный базовый класс дуплексного сервиса WCF
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfService`1.Callback">
            <summary>
            Возвращает канал обратного вызова
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.IWcfServiceManager">
            <summary>
            Интерфейс менеджера сервиса WCF
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.IWcfServiceManager.Start">
            <summary>
            Запускает менеджер
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.IWcfServiceManager.Stop">
            <summary>
            Останавливает менеджер
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.IWcfServiceManager.IsRunning">
            <summary>
            Возвращает true, если менеджер запущен, иначе false
            </summary>
        </member>
        <member name="T:RMLib.Services.Wcf.WcfServiceManager`1">
            <summary>
            Базовый класс менеджера сервиса WCF
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceManager`1.Start">
            <summary>
            Запускает менеджер
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceManager`1.Stop">
            <summary>
            Останавливает менеджер
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceManager`1.CreateInstance">
            <summary>
            Создаёт экземпляр сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceManager`1.ReleaseInstance(`0)">
            <summary>
            Уничтожает экземпляр сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceManager`1.IsRemoteCall(System.Guid)">
            <summary>
            Возвращает true, если идентификатор экземпляра сервиса не пустой, т.е. имеет место
            удалённый вызов сервисного метода
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceManager`1.OnServiceException(System.Exception)">
            <summary>
            Обрабатывает исключение сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceManager`1.OnServiceException(System.Exception,System.String)">
            <summary>
            Обрабатывает исключение сервиса
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceManager`1.InvokeCallback(System.Guid,System.Action{`0})">
            <summary>
            Выполняет метод обратного вызова (уведомление клиента)
            </summary>
        </member>
        <member name="M:RMLib.Services.Wcf.WcfServiceManager`1.InvokeCallback(System.Guid,System.Action{`0},System.String)">
            <summary>
            Выполняет метод обратного вызова (уведомление клиента)
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfServiceManager`1.IsRunning">
            <summary>
            Возвращает true, если менеджер запущен, иначе false
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfServiceManager`1.Host">
            <summary>
            Возвращает хост сервисов
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfServiceManager`1.Instances">
            <summary>
            Возвращает перечислитель экземпляров сервиса
            </summary>
        </member>
        <member name="P:RMLib.Services.Wcf.WcfServiceManager`1.Configurator">
            <summary>
            Возвращает конфигуратор сервиса
            </summary>
        </member>
        <member name="T:RMLib.Web.HttpClient">
            <summary>
            HTTP-клиент
            </summary>
        </member>
        <member name="M:RMLib.Web.HttpClient.MakeRequest">
            <summary>
            Выполняет HTTP-запрос
            </summary>
        </member>
        <member name="M:RMLib.Web.HttpClient.MakeRequest(System.String)">
            <summary>
            Выполняет HTTP-запрос используя указанный относительный адрес
            </summary>
        </member>
        <member name="M:RMLib.Web.HttpClient.PrepareRequest(System.Net.HttpWebRequest)">
            <summary>
            Настройка параметров запроса
            </summary>
        </member>
        <member name="P:RMLib.Web.HttpClient.BaseAddress">
            <summary>
            Возвращает базовый адрес
            </summary>
        </member>
        <member name="P:RMLib.Web.HttpClient.Credentials">
            <summary>
            Возвращает/устанавливает данные авторизации и аутентификации на сервере
            </summary>
        </member>
        <member name="P:RMLib.Web.HttpClient.ProxyCredentials">
            <summary>
            Возвращает/устанавливает данные авторизации и аутентификации на прокси-сервере
            </summary>
        </member>
        <member name="P:RMLib.Web.HttpClient.Content">
            <summary>
            Возвращает содержимое ответа
            </summary>
        </member>
        <member name="P:RMLib.Web.HttpClient.Description">
            <summary>
            Возвращает описание результата запроса
            </summary>
        </member>
        <member name="T:RMLib.WindowsVersion">
            <summary>
            Возвращает информацию об операционной системе
            </summary>
        </member>
        <member name="M:RMLib.WindowsVersion.ToString">
            <summary>
            Возвращает строку, содержащую описание версии операционной системы
            </summary>
        </member>
        <member name="P:RMLib.WindowsVersion.Version">
            <summary>
            Возвращает версию операционной системы
            </summary>
        </member>
        <member name="P:RMLib.WindowsVersion.Name">
            <summary>
            Возвращает имя операционной системы
            </summary>
        </member>
        <member name="P:RMLib.WindowsVersion.Edition">
            <summary>
            Возвращает редакцию операционной системы
            </summary>
        </member>
        <member name="P:RMLib.WindowsVersion.ServicePack">
            <summary>
            Возвращает информацию о пакете обновления операционной системы
            </summary>
        </member>
        <member name="P:RMLib.WindowsVersion.Bits">
            <summary>
            Возвращает разрядность операционной системы
            </summary>
        </member>
        <member name="P:RMLib.WindowsVersion.IsXPOrLater">
            <summary>
            Возвращает true, если выполняется под Windows XP или более поздней, иначе false
            </summary>
        </member>
        <member name="P:RMLib.WindowsVersion.IsVistaOrLater">
            <summary>
            Возвращает true, если метод выполняется под Windows Vista или более поздней, иначе false
            </summary>
        </member>
        <member name="T:RMLib.Xml.XmlExtensions">
            <summary>
            Расширения для работы с XML
            </summary>
        </member>
        <member name="M:RMLib.Xml.XmlExtensions.LoadXml(System.String)">
            <summary>
            Загружает элемент XML из строки
            </summary>
        </member>
        <member name="M:RMLib.Xml.XmlExtensions.SafeLoadXml(System.String)">
            <summary>
            Загружает элемент XML из строки. В случае ошибки возвращает пустой элемент.
            </summary>
        </member>
        <member name="M:RMLib.Xml.XmlExtensions.ToXml``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Сохраняет коллекцию в элемент XML
            </summary>
        </member>
        <member name="M:RMLib.Xml.XmlExtensions.FromXml``1(System.Xml.Linq.XElement)">
            <summary>
            Восстанавливает коллекцию из элемента XML
            </summary>
        </member>
        <member name="M:RMLib.Xml.XmlExtensions.FromXml``1(System.Xml.Linq.XElement,System.Func{System.Xml.Linq.XElement,``0})">
            <summary>
            Восстанавливает коллекцию из элемента XML
            </summary>
        </member>
        <member name="M:RMLib.Xml.XmlExtensions.ToXml``1(RMLib.IRange{``0},System.String)">
            <summary>
            Сохраняет диапазон в элемент XML
            </summary>
        </member>
    </members>
</doc>
